{
  "description": {
    "type": "root",
    "children": [
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "Components' container",
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 22,
                "offset": 21
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 22,
            "offset": 21
          },
          "indent": []
        }
      }
    ],
    "position": {
      "start": {
        "line": 1,
        "column": 1,
        "offset": 0
      },
      "end": {
        "line": 1,
        "column": 22,
        "offset": 21
      }
    }
  },
  "tags": [
    {
      "title": "class",
      "description": null,
      "lineNumber": 2,
      "name": null
    }
  ],
  "loc": {
    "start": {
      "line": 6,
      "column": 0
    },
    "end": {
      "line": 9,
      "column": 3
    }
  },
  "context": {
    "loc": {
      "start": {
        "line": 10,
        "column": 0
      },
      "end": {
        "line": 156,
        "column": 1
      }
    },
    "file": "/Users/marco/works/yuzu2/packages/application/tmp/sandbox.js",
    "sortKey": "undefined 00000010"
  },
  "augments": [],
  "errors": [
    {
      "message": "An explicit parameter named config was specified but didn't match inferred information options",
      "commentLineNumber": 4
    },
    {
      "message": "An explicit parameter named id was specified but didn't match inferred information options",
      "commentLineNumber": 7
    }
  ],
  "examples": [],
  "params": [
    {
      "title": "param",
      "name": "options",
      "lineNumber": 21,
      "default": "{}"
    },
    {
      "title": "param",
      "name": "config",
      "lineNumber": 4,
      "type": {
        "type": "NameExpression",
        "name": "object"
      }
    },
    {
      "title": "param",
      "name": "id",
      "lineNumber": 7,
      "description": {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "ID of the sandbox",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 18,
                "offset": 17
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 18,
            "offset": 17
          }
        }
      },
      "type": {
        "type": "OptionalType",
        "expression": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    }
  ],
  "properties": [],
  "returns": [],
  "sees": [],
  "throws": [],
  "todos": [],
  "kind": "class",
  "constructorComment": {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a sandbox instance",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 27,
          "offset": 26
        }
      }
    },
    "tags": [
      {
        "title": "constructor",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": null
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "config"
      },
      {
        "title": "param",
        "description": "Array of: components constructor or array with [ComponentConstructor, option]",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Component"
                  }
                ]
              },
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "ArrayType",
                    "elements": [
                      {
                        "type": "NameExpression",
                        "name": "Component"
                      },
                      {
                        "type": "NameExpression",
                        "name": "object"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        "name": "config.components"
      },
      {
        "title": "param",
        "description": "Root element of the sandbox. Either a dom element",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "HTMLElement"
              },
              {
                "type": "NameExpression",
                "name": "string"
              }
            ]
          }
        },
        "name": "config.root",
        "default": "document.body"
      },
      {
        "title": "param",
        "description": "ID of the sandbox",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "id"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Sandbox"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 11,
        "column": 4
      },
      "end": {
        "line": 20,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "file": "/Users/marco/works/yuzu2/packages/application/tmp/sandbox.js",
      "sortKey": "undefined 00000021",
      "code": "{\n    /**\n     * Creates a sandbox instance\n     *\n     * @constructor\n     * @param {object} config\n     * @param {Component[]|[Component, object][]} [config.components] Array of: components constructor or array with [ComponentConstructor, option]\n     * @param {HTMLElement|string} [config.root=document.body] Root element of the sandbox. Either a dom element\n     * @param {string} [id] ID of the sandbox\n     * @returns {Sandbox}\n     */\n    constructor(options = {}) {\n        /**\n         * Registered components storage\n         * @type {object[]}\n         */\n        this.$registry = [];\n        /**\n         * Running instances storage\n         * @type {Map}\n         */\n        this.$instances = new Map();\n        const { components = [], root = document.body, id } = options;\n        Object.assign(this, dush());\n        this.$id = id || `_sbx-${++idx}`; // eslint-disable-line no-plusplus\n        const $root = typeof root === 'string' ? qs(root) : root;\n        if (!isElement($root)) {\n            throw new Error(`Unable to initialize the sandbox on the following element: ${root}`);\n        }\n        this.$root = $root;\n        $root.setAttribute(Sandbox.UID_DATA_ATTR, this.$id);\n        components.forEach((config) => {\n            if (!Array.isArray(config)) {\n                this.register({ component: config, selector: config.root });\n            }\n            else {\n                const [component, params = {}] = config;\n                this.register({ component, ...params });\n            }\n        });\n        return this;\n    }\n    /**\n     * Registers a new component into the sandbox. The register will be traversed on `.start()`\n     * Initializing every matching component\n     *\n     * @param {object} params\n     * @param {Component} params.component Component constructor\n     * @param {string} params.selector Child component root CSS selector\n     * @param {*} params.* Every other property will be used as component option\n     */\n    register(params = {}) {\n        if (!Component.isComponent(params.component)) {\n            throw new TypeError('Missing or invalid `component` property');\n        }\n        if (typeof params.selector !== 'string') {\n            throw new TypeError('Missing `selector` property');\n        }\n        this.$registry.push(params);\n    }\n    /**\n     * Starts the sandbox with an optional context.\n     *\n     * The store will be available inside a component at `this.$context`\n     *\n     * @param {object} [context] Optional context object to be injected into the child components.\n     * @fires Sandbox#beforeStart\n     * @fires Sandbox#start Events dispatched after all components are initialized\n     * @returns {Sandbox}\n     */\n    start(context = {}) {\n        this.$context = createContext(context);\n        this.emit('beforeStart');\n        const sbSelector = `[${Sandbox.UID_DATA_ATTR}]`;\n        this.$registry.forEach(({ component: ComponentConstructor, selector, ...options }) => {\n            if (this.$instances.has(ComponentConstructor)) {\n                console.warn(`Component ${ComponentConstructor} already initialized`); // tslint:disable-line no-console\n                return;\n            }\n            const { $root } = this;\n            const instances = qsa(selector, $root).reduce((acc, el) => {\n                if (!el.dataset.skip &&\n                    !el.closest('[data-skip]') &&\n                    el.closest(sbSelector) === this.$root) {\n                    const instance = this.createInstance(ComponentConstructor, options, el);\n                    acc.push(instance);\n                }\n                return acc;\n            }, []);\n            this.$instances.set(ComponentConstructor, instances);\n        });\n        this.emit('start');\n        return this;\n    }\n    createInstance(ComponentConstructor, options, el) {\n        const inlineOptions = datasetParser(el);\n        const instance = new ComponentConstructor({\n            ...options,\n            ...inlineOptions,\n        });\n        if (this.$context) {\n            this.$context.inject(instance);\n        }\n        return instance.mount(el);\n    }\n    /**\n     * Stops every running component and clears sandbox events.\n     *\n     * @fires Sandbox#beforeStop\n     * @fires Sandbox#stop\n     * @returns {Promise<void>}\n     */\n    async stop() {\n        this.emit('beforeStop');\n        try {\n            const maps = [];\n            const groups = Array.from(this.$instances.values());\n            for (let i = 0, l = groups.length; i < l; i += 1) {\n                const instances = groups[i];\n                instances.forEach((instance) => {\n                    maps.push(instance.destroy());\n                });\n            }\n            await Promise.all(maps);\n        }\n        catch (e) {\n            this.emit('error', e);\n            return Promise.reject(e);\n        }\n        this.$instances.clear();\n        this.emit('stop');\n        this.clear();\n        return Promise.resolve();\n    }\n    /**\n     * Removes events and associated store\n     *\n     * @private\n     */\n    clear() {\n        this.$context = undefined; // release the context\n        this.off('beforeStart');\n        this.off('start');\n        this.off('beforeStop');\n        this.off('stop');\n    }\n}"
    },
    "augments": [],
    "errors": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "config",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "config.components",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of: components constructor or array with ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "componentconstructor, option",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "ComponentConstructor, option",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 49,
                          "offset": 48
                        },
                        "end": {
                          "line": 1,
                          "column": 77,
                          "offset": 76
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "end": {
                      "line": 1,
                      "column": 78,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 78,
              "offset": 77
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Component"
                  }
                ]
              },
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "ArrayType",
                    "elements": [
                      {
                        "type": "NameExpression",
                        "name": "Component"
                      },
                      {
                        "type": "NameExpression",
                        "name": "object"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      {
        "title": "param",
        "name": "config.root",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Root element of the sandbox. Either a dom element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "HTMLElement"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "default": "document.body"
      },
      {
        "title": "param",
        "name": "id",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "ID of the sandbox",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 1,
              "offset": 0
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Sandbox"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "class"
  },
  "name": "Sandbox",
  "members": {
    "global": [],
    "inner": [],
    "instance": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Registered components storage",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "tags": [
          {
            "title": "type",
            "description": null,
            "lineNumber": 2,
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "object"
                }
              ]
            }
          }
        ],
        "loc": {
          "start": {
            "line": 22,
            "column": 8
          },
          "end": {
            "line": 25,
            "column": 11
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 26,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 28
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/application/tmp/sandbox.js",
          "sortKey": "undefined 00000026"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "name": "$registry",
        "memberof": "Sandbox",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Sandbox",
            "kind": "class"
          },
          {
            "name": "$registry",
            "scope": "instance"
          }
        ],
        "namespace": "Sandbox#$registry"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Running instances storage",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "tags": [
          {
            "title": "type",
            "description": null,
            "lineNumber": 2,
            "type": {
              "type": "NameExpression",
              "name": "Map"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 27,
            "column": 8
          },
          "end": {
            "line": 30,
            "column": 11
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 31,
              "column": 36
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/application/tmp/sandbox.js",
          "sortKey": "undefined 00000031"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "type": {
          "type": "NameExpression",
          "name": "Map"
        },
        "name": "$instances",
        "memberof": "Sandbox",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Sandbox",
            "kind": "class"
          },
          {
            "name": "$instances",
            "scope": "instance"
          }
        ],
        "namespace": "Sandbox#$instances"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Registers a new component into the sandbox. The register will be traversed on ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": ".start()",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "end": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\nInitializing every matching component",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 89,
                      "offset": 88
                    },
                    "end": {
                      "line": 2,
                      "column": 38,
                      "offset": 126
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 126
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 38,
              "offset": 126
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": null,
            "lineNumber": 4,
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "params"
          },
          {
            "title": "param",
            "description": "Component constructor",
            "lineNumber": 5,
            "type": {
              "type": "NameExpression",
              "name": "Component"
            },
            "name": "params.component"
          },
          {
            "title": "param",
            "description": "Child component root CSS selector",
            "lineNumber": 6,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "params.selector"
          },
          {
            "title": "param",
            "description": "* Every other property will be used as component option",
            "lineNumber": 7,
            "type": {
              "type": "AllLiteral"
            },
            "name": "params.null"
          }
        ],
        "loc": {
          "start": {
            "line": 52,
            "column": 4
          },
          "end": {
            "line": 60,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/application/tmp/sandbox.js",
          "sortKey": "undefined 00000061"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "params",
            "lineNumber": 4,
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "properties": [
              {
                "title": "param",
                "name": "params.component",
                "lineNumber": 5,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Component constructor",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 22,
                              "offset": 21
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 22,
                          "offset": 21
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "Component"
                }
              },
              {
                "title": "param",
                "name": "params.selector",
                "lineNumber": 6,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Child component root CSS selector",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 34,
                              "offset": 33
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 34,
                          "offset": 33
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "title": "param",
                "name": "params.null",
                "lineNumber": 7,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "list",
                      "ordered": false,
                      "start": null,
                      "loose": false,
                      "children": [
                        {
                          "type": "listItem",
                          "loose": false,
                          "checked": null,
                          "children": [
                            {
                              "type": "paragraph",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Every other property will be used as component option",
                                  "position": {
                                    "start": {
                                      "line": 1,
                                      "column": 3,
                                      "offset": 2
                                    },
                                    "end": {
                                      "line": 1,
                                      "column": 56,
                                      "offset": 55
                                    },
                                    "indent": []
                                  }
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 3,
                                  "offset": 2
                                },
                                "end": {
                                  "line": 1,
                                  "column": 56,
                                  "offset": 55
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 56,
                              "offset": 55
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 56,
                          "offset": 55
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 56,
                      "offset": 55
                    }
                  }
                },
                "type": {
                  "type": "AllLiteral"
                }
              }
            ],
            "default": "{}"
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "register",
        "kind": "function",
        "memberof": "Sandbox",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Sandbox",
            "kind": "class"
          },
          {
            "name": "register",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Sandbox#register"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Starts the sandbox with an optional context.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The store will be available inside a component at ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 46
                    },
                    "end": {
                      "line": 3,
                      "column": 51,
                      "offset": 96
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "this.$context",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 51,
                      "offset": 96
                    },
                    "end": {
                      "line": 3,
                      "column": 66,
                      "offset": 111
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 46
                },
                "end": {
                  "line": 3,
                  "column": 66,
                  "offset": 111
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 66,
              "offset": 111
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Optional context object to be injected into the child components.",
            "lineNumber": 5,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "object"
              }
            },
            "name": "context"
          },
          {
            "title": "fires",
            "description": "Sandbox#beforeStart",
            "lineNumber": 6
          },
          {
            "title": "fires",
            "description": "Sandbox#start Events dispatched after all components are initialized",
            "lineNumber": 7
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 8,
            "type": {
              "type": "NameExpression",
              "name": "Sandbox"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 70,
            "column": 4
          },
          "end": {
            "line": 79,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/application/tmp/sandbox.js",
          "sortKey": "undefined 00000080"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "context",
            "lineNumber": 5,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Optional context object to be injected into the child components.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 66,
                          "offset": 65
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "object"
              }
            },
            "default": "{}"
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Sandbox"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "start",
        "kind": "function",
        "memberof": "Sandbox",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Sandbox",
            "kind": "class"
          },
          {
            "name": "start",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Sandbox#start"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Stops every running component and clears sandbox events.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            }
          }
        },
        "tags": [
          {
            "title": "fires",
            "description": "Sandbox#beforeStop",
            "lineNumber": 3
          },
          {
            "title": "fires",
            "description": "Sandbox#stop",
            "lineNumber": 4
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 5,
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Promise"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "void"
                }
              ]
            }
          }
        ],
        "loc": {
          "start": {
            "line": 115,
            "column": 4
          },
          "end": {
            "line": 121,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/application/tmp/sandbox.js",
          "sortKey": "undefined 00000122"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Promise"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "void"
                }
              ]
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "stop",
        "kind": "function",
        "memberof": "Sandbox",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Sandbox",
            "kind": "class"
          },
          {
            "name": "stop",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Sandbox#stop"
      }
    ],
    "events": [],
    "static": []
  },
  "path": [
    {
      "name": "Sandbox",
      "kind": "class"
    }
  ],
  "namespace": "Sandbox"
}