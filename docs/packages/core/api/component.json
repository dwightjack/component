{
  "description": {
    "type": "root",
    "children": [
      {
        "type": "paragraph",
        "children": [
          {
            "type": "inlineCode",
            "value": "Component",
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 12,
                "offset": 11
              },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " is an extensible class constructor which provides the building block of Yuzu component system.",
            "position": {
              "start": {
                "line": 1,
                "column": 12,
                "offset": 11
              },
              "end": {
                "line": 1,
                "column": 107,
                "offset": 106
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 107,
            "offset": 106
          },
          "indent": []
        }
      },
      {
        "type": "code",
        "lang": "js",
        "value": "const instance = new Component({ ... })",
        "position": {
          "start": {
            "line": 3,
            "column": 1,
            "offset": 108
          },
          "end": {
            "line": 5,
            "column": 4,
            "offset": 157
          },
          "indent": [
            1,
            1
          ]
        }
      },
      {
        "type": "blockquote",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "strong",
                "children": [
                  {
                    "type": "text",
                    "value": "Lifecycle",
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 5,
                        "offset": 163
                      },
                      "end": {
                        "line": 7,
                        "column": 14,
                        "offset": 172
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 7,
                    "column": 3,
                    "offset": 161
                  },
                  "end": {
                    "line": 7,
                    "column": 16,
                    "offset": 174
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 7,
                "column": 3,
                "offset": 161
              },
              "end": {
                "line": 7,
                "column": 16,
                "offset": 174
              },
              "indent": []
            }
          },
          {
            "type": "table",
            "align": [
              null,
              null
            ],
            "children": [
              {
                "type": "tableRow",
                "children": [
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "text",
                        "value": "stage",
                        "position": {
                          "start": {
                            "line": 9,
                            "column": 5,
                            "offset": 181
                          },
                          "end": {
                            "line": 9,
                            "column": 10,
                            "offset": 186
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 5,
                        "offset": 181
                      },
                      "end": {
                        "line": 9,
                        "column": 13,
                        "offset": 189
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "text",
                        "value": "hooks",
                        "position": {
                          "start": {
                            "line": 9,
                            "column": 16,
                            "offset": 192
                          },
                          "end": {
                            "line": 9,
                            "column": 21,
                            "offset": 197
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 16,
                        "offset": 192
                      },
                      "end": {
                        "line": 9,
                        "column": 25,
                        "offset": 201
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 9,
                    "column": 3,
                    "offset": 179
                  },
                  "end": {
                    "line": 9,
                    "column": 27,
                    "offset": 203
                  },
                  "indent": []
                }
              },
              {
                "type": "tableRow",
                "children": [
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "create",
                        "position": {
                          "start": {
                            "line": 11,
                            "column": 5,
                            "offset": 235
                          },
                          "end": {
                            "line": 11,
                            "column": 13,
                            "offset": 243
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 11,
                        "column": 5,
                        "offset": 235
                      },
                      "end": {
                        "line": 11,
                        "column": 13,
                        "offset": 243
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "created",
                        "position": {
                          "start": {
                            "line": 11,
                            "column": 16,
                            "offset": 246
                          },
                          "end": {
                            "line": 11,
                            "column": 25,
                            "offset": 255
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "offset": 246
                      },
                      "end": {
                        "line": 11,
                        "column": 25,
                        "offset": 255
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 11,
                    "column": 3,
                    "offset": 233
                  },
                  "end": {
                    "line": 11,
                    "column": 27,
                    "offset": 257
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 9,
                "column": 3,
                "offset": 179
              },
              "end": {
                "line": 11,
                "column": 27,
                "offset": 257
              },
              "indent": [
                3,
                3
              ]
            }
          }
        ],
        "position": {
          "start": {
            "line": 7,
            "column": 1,
            "offset": 159
          },
          "end": {
            "line": 11,
            "column": 27,
            "offset": 257
          },
          "indent": [
            1,
            1,
            1,
            1
          ]
        }
      },
      {
        "type": "heading",
        "depth": 4,
        "children": [
          {
            "type": "text",
            "value": "Instance properties",
            "position": {
              "start": {
                "line": 13,
                "column": 6,
                "offset": 264
              },
              "end": {
                "line": 13,
                "column": 25,
                "offset": 283
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 13,
            "column": 1,
            "offset": 259
          },
          "end": {
            "line": 13,
            "column": 25,
            "offset": 283
          },
          "indent": []
        }
      },
      {
        "type": "list",
        "ordered": false,
        "start": null,
        "loose": false,
        "children": [
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$active",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 3,
                        "offset": 287
                      },
                      "end": {
                        "line": 15,
                        "column": 12,
                        "offset": 296
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 12,
                        "offset": 296
                      },
                      "end": {
                        "line": 15,
                        "column": 13,
                        "offset": 297
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "boolean",
                        "position": {
                          "start": {
                            "line": 15,
                            "column": 15,
                            "offset": 299
                          },
                          "end": {
                            "line": 15,
                            "column": 22,
                            "offset": 306
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 13,
                        "offset": 297
                      },
                      "end": {
                        "line": 15,
                        "column": 24,
                        "offset": 308
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": ",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 24,
                        "offset": 308
                      },
                      "end": {
                        "line": 15,
                        "column": 26,
                        "offset": 310
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 26,
                        "offset": 310
                      },
                      "end": {
                        "line": 15,
                        "column": 32,
                        "offset": 316
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " if the instance is mounted and initialized",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 32,
                        "offset": 316
                      },
                      "end": {
                        "line": 15,
                        "column": 75,
                        "offset": 359
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 15,
                    "column": 3,
                    "offset": 287
                  },
                  "end": {
                    "line": 15,
                    "column": 75,
                    "offset": 359
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 15,
                "column": 1,
                "offset": 285
              },
              "end": {
                "line": 15,
                "column": 75,
                "offset": 359
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "options",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 3,
                        "offset": 362
                      },
                      "end": {
                        "line": 16,
                        "column": 12,
                        "offset": 371
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 12,
                        "offset": 371
                      },
                      "end": {
                        "line": 16,
                        "column": 13,
                        "offset": 372
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 15,
                            "offset": 374
                          },
                          "end": {
                            "line": 16,
                            "column": 17,
                            "offset": 376
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 16,
                                "column": 18,
                                "offset": 377
                              },
                              "end": {
                                "line": 16,
                                "column": 24,
                                "offset": 383
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 17,
                            "offset": 376
                          },
                          "end": {
                            "line": 16,
                            "column": 25,
                            "offset": 384
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": any }",
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 25,
                            "offset": 384
                          },
                          "end": {
                            "line": 16,
                            "column": 32,
                            "offset": 391
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 13,
                        "offset": 372
                      },
                      "end": {
                        "line": 16,
                        "column": 34,
                        "offset": 393
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": instance options (see ",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 34,
                        "offset": 393
                      },
                      "end": {
                        "line": 16,
                        "column": 58,
                        "offset": 417
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#defaultOptions",
                    "children": [
                      {
                        "type": "text",
                        "value": "defaultOptions",
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 59,
                            "offset": 418
                          },
                          "end": {
                            "line": 16,
                            "column": 73,
                            "offset": 432
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 58,
                        "offset": 417
                      },
                      "end": {
                        "line": 16,
                        "column": 91,
                        "offset": 450
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 91,
                        "offset": 450
                      },
                      "end": {
                        "line": 16,
                        "column": 92,
                        "offset": 451
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 16,
                    "column": 3,
                    "offset": 362
                  },
                  "end": {
                    "line": 16,
                    "column": 92,
                    "offset": 451
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 16,
                "column": 1,
                "offset": 360
              },
              "end": {
                "line": 16,
                "column": 92,
                "offset": 451
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "state",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 3,
                        "offset": 454
                      },
                      "end": {
                        "line": 17,
                        "column": 10,
                        "offset": 461
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 10,
                        "offset": 461
                      },
                      "end": {
                        "line": 17,
                        "column": 11,
                        "offset": 462
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 13,
                            "offset": 464
                          },
                          "end": {
                            "line": 17,
                            "column": 15,
                            "offset": 466
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 17,
                                "column": 16,
                                "offset": 467
                              },
                              "end": {
                                "line": 17,
                                "column": 22,
                                "offset": 473
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 15,
                            "offset": 466
                          },
                          "end": {
                            "line": 17,
                            "column": 23,
                            "offset": 474
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": any }",
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 23,
                            "offset": 474
                          },
                          "end": {
                            "line": 17,
                            "column": 30,
                            "offset": 481
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 11,
                        "offset": 462
                      },
                      "end": {
                        "line": 17,
                        "column": 32,
                        "offset": 483
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": instance state (see ",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "offset": 483
                      },
                      "end": {
                        "line": 17,
                        "column": 54,
                        "offset": 505
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#setState",
                    "children": [
                      {
                        "type": "text",
                        "value": "setState",
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 55,
                            "offset": 506
                          },
                          "end": {
                            "line": 17,
                            "column": 63,
                            "offset": 514
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 54,
                        "offset": 505
                      },
                      "end": {
                        "line": 17,
                        "column": 75,
                        "offset": 526
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 75,
                        "offset": 526
                      },
                      "end": {
                        "line": 17,
                        "column": 76,
                        "offset": 527
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 17,
                    "column": 3,
                    "offset": 454
                  },
                  "end": {
                    "line": 17,
                    "column": 76,
                    "offset": 527
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 17,
                "column": 1,
                "offset": 452
              },
              "end": {
                "line": 17,
                "column": 76,
                "offset": 527
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$el",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 3,
                        "offset": 530
                      },
                      "end": {
                        "line": 18,
                        "column": 8,
                        "offset": 535
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 8,
                        "offset": 535
                      },
                      "end": {
                        "line": 18,
                        "column": 9,
                        "offset": 536
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "linkReference",
                        "identifier": "1",
                        "referenceType": "full",
                        "children": [
                          {
                            "type": "text",
                            "value": "Element",
                            "position": {
                              "start": {
                                "line": 18,
                                "column": 12,
                                "offset": 539
                              },
                              "end": {
                                "line": 18,
                                "column": 19,
                                "offset": 546
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 18,
                            "column": 11,
                            "offset": 538
                          },
                          "end": {
                            "line": 18,
                            "column": 23,
                            "offset": 550
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 9,
                        "offset": 536
                      },
                      "end": {
                        "line": 18,
                        "column": 25,
                        "offset": 552
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": The instance root DOM element (see ",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 25,
                        "offset": 552
                      },
                      "end": {
                        "line": 18,
                        "column": 62,
                        "offset": 589
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#mount",
                    "children": [
                      {
                        "type": "text",
                        "value": "mount",
                        "position": {
                          "start": {
                            "line": 18,
                            "column": 63,
                            "offset": 590
                          },
                          "end": {
                            "line": 18,
                            "column": 68,
                            "offset": 595
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 62,
                        "offset": 589
                      },
                      "end": {
                        "line": 18,
                        "column": 77,
                        "offset": 604
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 77,
                        "offset": 604
                      },
                      "end": {
                        "line": 18,
                        "column": 78,
                        "offset": 605
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 18,
                    "column": 3,
                    "offset": 530
                  },
                  "end": {
                    "line": 18,
                    "column": 78,
                    "offset": 605
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 18,
                "column": 1,
                "offset": 528
              },
              "end": {
                "line": 18,
                "column": 78,
                "offset": 605
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$els",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 3,
                        "offset": 608
                      },
                      "end": {
                        "line": 19,
                        "column": 9,
                        "offset": 614
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 9,
                        "offset": 614
                      },
                      "end": {
                        "line": 19,
                        "column": 10,
                        "offset": 615
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 12,
                            "offset": 617
                          },
                          "end": {
                            "line": 19,
                            "column": 14,
                            "offset": 619
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 19,
                                "column": 15,
                                "offset": 620
                              },
                              "end": {
                                "line": 19,
                                "column": 21,
                                "offset": 626
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 14,
                            "offset": 619
                          },
                          "end": {
                            "line": 19,
                            "column": 22,
                            "offset": 627
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": ",
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 22,
                            "offset": 627
                          },
                          "end": {
                            "line": 19,
                            "column": 24,
                            "offset": 629
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "1",
                        "referenceType": "full",
                        "children": [
                          {
                            "type": "text",
                            "value": "Element",
                            "position": {
                              "start": {
                                "line": 19,
                                "column": 25,
                                "offset": 630
                              },
                              "end": {
                                "line": 19,
                                "column": 32,
                                "offset": 637
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 24,
                            "offset": 629
                          },
                          "end": {
                            "line": 19,
                            "column": 36,
                            "offset": 641
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " }",
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 36,
                            "offset": 641
                          },
                          "end": {
                            "line": 19,
                            "column": 38,
                            "offset": 643
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 10,
                        "offset": 615
                      },
                      "end": {
                        "line": 19,
                        "column": 40,
                        "offset": 645
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping references to component's child DOM elements (see ",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 40,
                        "offset": 645
                      },
                      "end": {
                        "line": 19,
                        "column": 107,
                        "offset": 712
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "selectors",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 107,
                        "offset": 712
                      },
                      "end": {
                        "line": 19,
                        "column": 118,
                        "offset": 723
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " below)",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 118,
                        "offset": 723
                      },
                      "end": {
                        "line": 19,
                        "column": 125,
                        "offset": 730
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 19,
                    "column": 3,
                    "offset": 608
                  },
                  "end": {
                    "line": 19,
                    "column": 125,
                    "offset": 730
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 19,
                "column": 1,
                "offset": 606
              },
              "end": {
                "line": 19,
                "column": 125,
                "offset": 730
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$refs",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 3,
                        "offset": 733
                      },
                      "end": {
                        "line": 20,
                        "column": 10,
                        "offset": 740
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 10,
                        "offset": 740
                      },
                      "end": {
                        "line": 20,
                        "column": 11,
                        "offset": 741
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 13,
                            "offset": 743
                          },
                          "end": {
                            "line": 20,
                            "column": 15,
                            "offset": 745
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 20,
                                "column": 16,
                                "offset": 746
                              },
                              "end": {
                                "line": 20,
                                "column": 22,
                                "offset": 752
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 15,
                            "offset": 745
                          },
                          "end": {
                            "line": 20,
                            "column": 23,
                            "offset": 753
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": Component }",
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 23,
                            "offset": 753
                          },
                          "end": {
                            "line": 20,
                            "column": 36,
                            "offset": 766
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 11,
                        "offset": 741
                      },
                      "end": {
                        "line": 20,
                        "column": 38,
                        "offset": 768
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping references to child components (see ",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 38,
                        "offset": 768
                      },
                      "end": {
                        "line": 20,
                        "column": 91,
                        "offset": 821
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#setRef",
                    "children": [
                      {
                        "type": "text",
                        "value": "setRef",
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 92,
                            "offset": 822
                          },
                          "end": {
                            "line": 20,
                            "column": 98,
                            "offset": 828
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 91,
                        "offset": 821
                      },
                      "end": {
                        "line": 20,
                        "column": 108,
                        "offset": 838
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 108,
                        "offset": 838
                      },
                      "end": {
                        "line": 20,
                        "column": 109,
                        "offset": 839
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 20,
                    "column": 3,
                    "offset": 733
                  },
                  "end": {
                    "line": 20,
                    "column": 109,
                    "offset": 839
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 20,
                "column": 1,
                "offset": 731
              },
              "end": {
                "line": 20,
                "column": 109,
                "offset": 839
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "selectors",
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 3,
                        "offset": 842
                      },
                      "end": {
                        "line": 21,
                        "column": 14,
                        "offset": 853
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 14,
                        "offset": 853
                      },
                      "end": {
                        "line": 21,
                        "column": 15,
                        "offset": 854
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 21,
                            "column": 17,
                            "offset": 856
                          },
                          "end": {
                            "line": 21,
                            "column": 19,
                            "offset": 858
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 21,
                                "column": 20,
                                "offset": 859
                              },
                              "end": {
                                "line": 21,
                                "column": 26,
                                "offset": 865
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 21,
                            "column": 19,
                            "offset": 858
                          },
                          "end": {
                            "line": 21,
                            "column": 27,
                            "offset": 866
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": string }",
                        "position": {
                          "start": {
                            "line": 21,
                            "column": 27,
                            "offset": 866
                          },
                          "end": {
                            "line": 21,
                            "column": 37,
                            "offset": 876
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 15,
                        "offset": 854
                      },
                      "end": {
                        "line": 21,
                        "column": 39,
                        "offset": 878
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping a child element's reference name and a CSS selector",
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 39,
                        "offset": 878
                      },
                      "end": {
                        "line": 21,
                        "column": 107,
                        "offset": 946
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 21,
                    "column": 3,
                    "offset": 842
                  },
                  "end": {
                    "line": 21,
                    "column": 107,
                    "offset": 946
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 21,
                "column": 1,
                "offset": 840
              },
              "end": {
                "line": 21,
                "column": 107,
                "offset": 946
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "listeners",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 3,
                        "offset": 949
                      },
                      "end": {
                        "line": 22,
                        "column": 14,
                        "offset": 960
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 14,
                        "offset": 960
                      },
                      "end": {
                        "line": 22,
                        "column": 15,
                        "offset": 961
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 17,
                            "offset": 963
                          },
                          "end": {
                            "line": 22,
                            "column": 19,
                            "offset": 965
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 22,
                                "column": 20,
                                "offset": 966
                              },
                              "end": {
                                "line": 22,
                                "column": 26,
                                "offset": 972
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 19,
                            "offset": 965
                          },
                          "end": {
                            "line": 22,
                            "column": 27,
                            "offset": 973
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": function|string }",
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 27,
                            "offset": 973
                          },
                          "end": {
                            "line": 22,
                            "column": 46,
                            "offset": 992
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 15,
                        "offset": 961
                      },
                      "end": {
                        "line": 22,
                        "column": 48,
                        "offset": 994
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping DOM listeners and handlers (see ",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 48,
                        "offset": 994
                      },
                      "end": {
                        "line": 22,
                        "column": 97,
                        "offset": 1043
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#setListener",
                    "children": [
                      {
                        "type": "text",
                        "value": "setListener",
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 98,
                            "offset": 1044
                          },
                          "end": {
                            "line": 22,
                            "column": 109,
                            "offset": 1055
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 97,
                        "offset": 1043
                      },
                      "end": {
                        "line": 22,
                        "column": 124,
                        "offset": 1070
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 124,
                        "offset": 1070
                      },
                      "end": {
                        "line": 22,
                        "column": 125,
                        "offset": 1071
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 22,
                    "column": 3,
                    "offset": 949
                  },
                  "end": {
                    "line": 22,
                    "column": 125,
                    "offset": 1071
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 22,
                "column": 1,
                "offset": 947
              },
              "end": {
                "line": 22,
                "column": 125,
                "offset": 1071
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "actions",
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 3,
                        "offset": 1074
                      },
                      "end": {
                        "line": 23,
                        "column": 12,
                        "offset": 1083
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 12,
                        "offset": 1083
                      },
                      "end": {
                        "line": 23,
                        "column": 13,
                        "offset": 1084
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 23,
                            "column": 15,
                            "offset": 1086
                          },
                          "end": {
                            "line": 23,
                            "column": 17,
                            "offset": 1088
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 23,
                                "column": 18,
                                "offset": 1089
                              },
                              "end": {
                                "line": 23,
                                "column": 24,
                                "offset": 1095
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 23,
                            "column": 17,
                            "offset": 1088
                          },
                          "end": {
                            "line": 23,
                            "column": 25,
                            "offset": 1096
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": function|string }",
                        "position": {
                          "start": {
                            "line": 23,
                            "column": 25,
                            "offset": 1096
                          },
                          "end": {
                            "line": 23,
                            "column": 44,
                            "offset": 1115
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 13,
                        "offset": 1084
                      },
                      "end": {
                        "line": 23,
                        "column": 46,
                        "offset": 1117
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping state keys and functions to executed on state update",
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 46,
                        "offset": 1117
                      },
                      "end": {
                        "line": 23,
                        "column": 115,
                        "offset": 1186
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 23,
                    "column": 3,
                    "offset": 1074
                  },
                  "end": {
                    "line": 23,
                    "column": 115,
                    "offset": 1186
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 23,
                "column": 1,
                "offset": 1072
              },
              "end": {
                "line": 23,
                "column": 115,
                "offset": 1186
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 15,
            "column": 1,
            "offset": 285
          },
          "end": {
            "line": 23,
            "column": 115,
            "offset": 1186
          },
          "indent": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
          ]
        }
      },
      {
        "type": "definition",
        "identifier": "1",
        "title": null,
        "url": "https://developer.mozilla.org/docs/Web/API/Element",
        "position": {
          "start": {
            "line": 25,
            "column": 1,
            "offset": 1188
          },
          "end": {
            "line": 25,
            "column": 56,
            "offset": 1243
          },
          "indent": []
        }
      }
    ],
    "position": {
      "start": {
        "line": 1,
        "column": 1,
        "offset": 0
      },
      "end": {
        "line": 25,
        "column": 56,
        "offset": 1243
      }
    }
  },
  "tags": [
    {
      "title": "class",
      "description": null,
      "lineNumber": 27,
      "type": null,
      "name": null
    },
    {
      "title": "param",
      "description": "Instance options",
      "lineNumber": 28,
      "type": {
        "type": "OptionalType",
        "expression": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      "name": "options",
      "default": "{}"
    },
    {
      "title": "example",
      "description": "",
      "lineNumber": 29
    },
    {
      "title": "returns",
      "description": null,
      "lineNumber": 30,
      "type": {
        "type": "NameExpression",
        "name": "Component"
      }
    }
  ],
  "loc": {
    "start": {
      "line": 4,
      "column": 0
    },
    "end": {
      "line": 35,
      "column": 3
    }
  },
  "context": {
    "loc": {
      "start": {
        "line": 36,
        "column": 0
      },
      "end": {
        "line": 651,
        "column": 1
      }
    },
    "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
    "sortKey": "undefined 00000036"
  },
  "augments": [],
  "errors": [
    {
      "message": "@example without code",
      "commentLineNumber": 29
    }
  ],
  "examples": [],
  "params": [
    {
      "title": "param",
      "name": "options",
      "lineNumber": 28,
      "description": {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "Instance options",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 17,
                "offset": 16
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 17,
            "offset": 16
          }
        }
      },
      "type": {
        "type": "NameExpression",
        "name": "object"
      },
      "default": "{}"
    }
  ],
  "properties": [],
  "returns": [
    {
      "description": {
        "type": "root",
        "children": [],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 1,
            "offset": 0
          }
        }
      },
      "title": "returns",
      "type": {
        "type": "NameExpression",
        "name": "Component"
      }
    }
  ],
  "sees": [],
  "throws": [],
  "todos": [],
  "kind": "class",
  "constructorComment": {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Component constructor",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 22,
          "offset": 21
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 53,
        "column": 4
      },
      "end": {
        "line": 55,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
      "sortKey": "undefined 00000056",
      "code": "{\n    /**\n     * ```js\n     * this.readyState(state, prevState)\n     * ```\n     *\n     * Optional method used to delay the execution of [`ready`](#ready) after the state satisfies to a given condition.\n     *\n     * Will be executed at every state change until it returns `true`.\n     *\n     * @name readyState\n     * @public\n     * @type {function}\n     * @param {object} state The current state\n     * @param {object} prevState The previous state\n     * @returns {boolean}\n     */\n    /**\n     * Component constructor\n     */\n    constructor(options = {}) {\n        const defaultOptionsFn = this.constructor\n            .defaultOptions;\n        const defaultOptions = typeof defaultOptionsFn === 'function'\n            ? defaultOptionsFn.call(this, this)\n            : {};\n        this.state = {};\n        this.options = Object.entries(defaultOptions).reduce((opts, [key, value]) => {\n            let v = options[key] !== undefined ? options[key] : value;\n            if (typeof v === 'function' && !Component.isComponent(v)) {\n                v = v.bind(this);\n            }\n            opts[key] = v; // eslint-disable-line no-param-reassign\n            return opts;\n        }, {});\n        Object.assign(this, dush());\n        this.$active = false;\n        // DOM references\n        this.$els = {};\n        // sub components references\n        this.$refs = {};\n        this.$refsStore = new Map();\n        this.$listeners = new Map();\n        this.created();\n    }\n    /**\n     * ```js\n     * Component.isComponent(obj)\n     * ```\n     *\n     * Checks whether the passed-in value is a Component constructor.\n     *\n     * @static\n     * @param {*} value\n     * @returns {boolean}\n     */\n    static isComponent(value) {\n        if (!value || !value.defaultOptions) {\n            return false;\n        }\n        return typeof value.defaultOptions === 'function';\n    }\n    /**\n     * ```js\n     * mount(el, [state])\n     * ```\n     *\n     * Mounts a component instance on a DOM element and initializes it.\n     *\n     * ?> To prevent initialization and just mount the component set `state` to `null`.\n     *\n     * > **Lifecycle**\n     * >\n     * > | stage    | hooks     |\n     * > |----------| --------- |\n     * > | `mount` | `beforeMount` <sup>(1)</sup>, `mounted` |\n     *\n     * 1. Just after attaching the root element (`this.$el`) but before any listener and selector registration.\n     *\n     * @param {string|Element} el Component's root element\n     * @param {object|null} [state={}] Initial state\n     * @returns {Component}\n     */\n    mount(el, state = {}) {\n        if (this.$el) {\n            throw new Error('Component is already mounted');\n        }\n        const $el = typeof el === 'string' ? qs(el) : el;\n        if (!isElement($el)) {\n            // fail silently (kinda...);\n            console.warn('Element is not a DOM element', $el); // tslint:disable-line no-console\n            return this;\n        }\n        this.$el = $el; // eslint-disable-line no-multi-assign\n        this.beforeMount();\n        if (this.selectors) {\n            Object.entries(this.selectors).forEach(([key, selector]) => {\n                this.$els[key] = qs(selector, this.$el);\n            });\n        }\n        if (this.listeners) {\n            Object.entries(this.listeners).forEach(([def, handler]) => {\n                this.setListener(def, bindMethod(this, handler));\n            });\n        }\n        if (state) {\n            this.init(state);\n        }\n        this.mounted();\n        return this;\n    }\n    /**\n     * ```js\n     * init([state])\n     * ```\n     * Initializes the component instance.\n     *\n     * > **Lifecycle**\n     * >\n     * > | stage    | hooks     |\n     * > |----------| --------- |\n     * > | `init` | `initialize`, `ready` |\n     *\n     * @param {object|null} [state={}] Initial state\n     * @returns {Component}\n     */\n    init(state = {}) {\n        if (!isElement(this.$el)) {\n            throw new Error('component instance not mounted');\n        }\n        const { $el } = this;\n        // initialization placeholder\n        let uid = $el.getAttribute(Component.UID_DATA_ATTR);\n        if (uid) {\n            console.warn(`Element ${uid} is already initialized... skipping`, $el); // tslint:disable-line no-console\n            this.$uid = uid;\n            return this;\n        }\n        uid = nextUid();\n        this.$uid = uid;\n        $el.setAttribute(Component.UID_DATA_ATTR, uid);\n        if (!$el.id) {\n            $el.id = `c_${uid}`;\n        }\n        this.initialize();\n        if (this.actions) {\n            Object.entries(this.actions).forEach(([key, method]) => {\n                this.on(`change:${key}`, bindMethod(this, method));\n            });\n        }\n        const initialState = Object.assign(this.state, state);\n        this.replaceState(initialState);\n        this.$active = true;\n        if (this.readyState) {\n            // is it a promise ?\n            const watcher = (current, prev) => {\n                if (this.readyState(current, prev)) {\n                    this.off('change:*', watcher);\n                    this.ready();\n                }\n            };\n            this.on('change:*', watcher);\n            return this;\n        }\n        this.ready();\n        return this;\n    }\n    /**\n     * Lifecycle hook called on instance creation.\n     *\n     * At this stage just the instance options (`this.options`) are initialized.\n     *\n     *  Overwrite this method with custom logic in your components.\n     *\n     * ?> Use this hook to tap as early as possible into the component's properties. For example to set a dynamic initial state.\n     */\n    created() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called just before mounting the instance onto the root element.\n     *\n     * At this stage the component is already attached to its root DOM element.\n     *\n     * Overwrite this method with custom logic in your components.\n     */\n    beforeMount() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called when the instance gets mounted onto a DOM element.\n     *\n     * At this stage both children elements (`this.$els.*`) and event listeners configured in `this.listeners` have been setup.\n     *\n     * Overwrite this method with custom logic in your components.\n     *\n     * ?> Use this method when you need to work with the DOM or manage any side-effect that requires the component to be into the DOM.\n     */\n    mounted() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called before instance initialization.\n     *\n     * At this stage the state and state listeners are not yet been initialized.\n     *\n     * Overwrite this method with custom logic in your components.\n     *\n     * ?> Use this method to set child components by [setRef](#setRef) and run any preparatory work on the instance.\n     */\n    initialize() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called after instance initialization.\n     *\n     * At this stage State and event binding are already in place.\n     *\n     * Overwrite this method with custom logic in your components.\n     *\n     * ?> `ready` lifecycle can be delayed (_async ready_) by implementing a [`readyState`](packages/core/#async-ready-state) method.\n     */\n    ready() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called just before closing child refs.\n     *\n     * This hook is called just before destroying the instance. Every property, listener and state feature is still active.\n     *\n     * Overwrite this method with custom logic in your components.\n     *\n     * !> This is an async method. Return a promise in order to suspend the destroy process.\n     */\n    beforeDestroy() { } // tslint:disable-line: no-empty\n    /**\n     * ```js\n     * getState(key)\n     * ```\n     *\n     * Returns a property of the state or a default value if the property is not set.\n     *\n     * ?> In ES6 environments you can use a [destructuring assignment](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment) instead: ` const { name = 'John'} = this.state`\n     *\n     *\n     * @param {string} key Property to return\n     * @param {*} def Default value\n     * @returns {*}\n     * @example\n     * const instance = new Component().mount('#app', { a: 1 });\n     * // instance.getState('a') === 1\n     *\n     * // instance.getState('b', false) === false\n     */\n    getState(key, def) {\n        return this.state.hasOwnProperty(key) ? this.state[key] : def;\n    }\n    /* eslint-disable class-methods-use-this */\n    /**\n     * ```js\n     * shouldUpdateState(string, currentValue, newValue)\n     * ```\n     * Executes a strict inequality comparison (`!==`) on the passed-in values and returns the result.\n     *\n     * !> This method is executed on every [`setState`](#setstate) call.\n     *\n     * You can overwrite this method with your own validation logic.\n     *\n     * @param {string} key State property name\n     * @param {*} currentValue Value stored in the current state\n     * @param {*} newValue New value\n     * @returns {boolean}\n     */\n    shouldUpdateState(key, currentValue, newValue) {\n        return currentValue !== newValue;\n    }\n    /* eslint-enable class-methods-use-this */\n    /**\n     * ```js\n     * setState(updater, [silent])\n     * ```\n     *\n     * Updates the internal instance state by creating a shallow copy of the current state and updating the passed-in keys.\n     *\n     * If the computed new state is different from the old one it emits a `change:<property>` event for every changed property\n     * as well as a global `change:*` event.\n     *\n     * If the new value argument is a function, it will be executed with the current state as argument.\n     * The returned value will be used to update the state.\n     *\n     * ?> To prevent an instance from emitting `change:` events set the second argument to `true` (silent update).\n     *\n     * @param {object|function} updater Defines which part of the state must be updated\n     * @param {boolean} [silent=false] Update the state without emitting change events\n     * @example\n     * instance.on('change:a', (next, prev) => console.log(next, prev));\n     * instance.setState({ a: 1 }); //emits 'change:a' -> logs undefined,1\n     *\n     * instance.setState({ a: 1 }); //nothing happens\n     * instance.setState({ a: 2 }, true); //nothing happens, again...\n     *\n     * // use the current state to calculate its next value\n     * instance.setState(({ a }) => ({a + 1}));\n     */\n    setState(updater, silent = false) {\n        const changed = [];\n        const { state: prevState } = this;\n        const changeSet = evaluate(updater, this.state);\n        this.state = Object.entries(this.state).reduce((newState, [k, prevValue]) => {\n            const value = changeSet[k];\n            if (value === undefined ||\n                this.shouldUpdateState(k, prevValue, value) === false) {\n                newState[k] = prevValue; // eslint-disable-line no-param-reassign\n            }\n            else {\n                changed.push(k);\n                newState[k] = value; // eslint-disable-line no-param-reassign\n            }\n            return newState;\n        }, {});\n        if (!silent && changed.length > 0) {\n            while (changed.length !== 0) {\n                const k = changed.pop();\n                this.emit(`change:${k}`, this.state[k], prevState[k]);\n            }\n            this.emit('change:*', this.state, prevState);\n        }\n    }\n    /**\n     * ```js\n     * replaceState(newState, [silent])\n     * ```\n     *\n     * Replaces the current state of the instance with a completely new state.\n     *\n     * !> Note that this methods is un-affected by [`shouldUpdateState`](#shouldupdatestate).\n     *\n     * @param {object} newState The new state object\n     * @param {boolean} [silent=false] Replace the state without emitting change events\n     * @example\n     * instance.replaceState({ a: 1 });\n     * // instance.state.a === 1\n     * instance.replaceState({ b: 2 });\n     * // instance.state.b === 2\n     * // instance.state.a === undefined\n     */\n    replaceState(newState, silent = false) {\n        const { state: prevState } = this;\n        this.state = Object.assign({}, newState);\n        Object.entries(this.state).forEach(([key, value]) => {\n            if (!silent) {\n                this.emit(`change:${key}`, value, prevState[key]);\n            }\n        });\n        if (!silent) {\n            this.emit('change:*', this.state, prevState);\n        }\n    }\n    /**\n     * ```js\n     * broadcast(event, [...params])\n     * ```\n     *\n     * Emits a `broadcast:<eventname>` event on every child component listed in `$refs`.\n     *\n     * @param {string} event Event name\n     * @param {*[]} [params] Additional arguments to pass to the handler\n     * @example\n     * const child = new Component('#child');\n     * child.on('broadcast:log', (str) => console.log(str));\n     *\n     * instance.setRef({ id: 'child', component: child });\n     * instance.broadcast('log', 'test') // child component logs 'test'\n     */\n    broadcast(event, ...params) {\n        this.$refsStore.forEach((instance) => {\n            instance.emit(`broadcast:${event}`, ...params);\n        });\n    }\n    /**\n     * ```js\n     * setListener(string, handler)\n     * ```\n     *\n     * Sets a DOM event listener.\n     *\n     * The first argument must be a string composed by an event name (ie `click`) and a CSS selector (`.element`)\n     * separated by a space.\n     *\n     * If the CSS selector starts with `@` the listener will be attached to the\n     * corresponding reference child element (`this.$els.<element>`), if any.\n     *\n     * @param {string} def Event and target element definition. Format `eventName [target]`\n     * @param {function} handler Event handler\n     * @example\n     *\n     * // attach a click handler to a child element\n     * instance.setListener('click .button', () => ...)\n     *\n     * // attach a click handler to this.$els.btn\n     * instance.setListener('click @btn', () => ...)\n     *\n     * // attach a click handler to this.$el\n     * instance.setListener('click', () => ...)\n     */\n    setListener(def, handler) {\n        let event;\n        let selector;\n        const match = def && def.match(LISTENER_REGEXP);\n        if (match) {\n            const $el = this.$el;\n            [, event, selector = $el] = match;\n            let element;\n            if (typeof selector === 'string') {\n                element = selector.startsWith('@')\n                    ? this.$els[selector.slice(1)]\n                    : qs(selector, $el);\n            }\n            else {\n                element = selector;\n            }\n            if (element) {\n                element.addEventListener(event, handler);\n                this.$listeners.set(handler, { event, element });\n            }\n        }\n    }\n    /**\n     * ```js\n     * removeListeners()\n     * ```\n     *\n     * Removes all DOM event listeners attached with `.setListener`.\n     *\n     */\n    removeListeners() {\n        this.$listeners.forEach(({ event, element }, handler) => {\n            element.removeEventListener(event, handler);\n        });\n        this.$listeners.clear();\n    }\n    /**\n     * ```js\n     * setRef(config, [props])\n     * ```\n     *\n     * Attaches a reference to a child component.\n     *\n     * If a reference `id` is already attached, the previous one is destroyed and replaced with the new one.\n     *\n     * ?> This is an async method returning a promise.\n     *\n     * @param {object} config A child component configuration object\n     * @param {string} config.id Reference id. Will be used to set a reference to the child component onto `this.$refs`\n     * @param {component} config.component Component constructor or component instance\n     * @param {string|HTMLElement} config.el Child component root element. Ignored if `config.component` is a component instance\n     * @param {Object} config.on Child component event listeners. Format `{ 'eventname': handler }`\n     * @param {*} config.* Any other property listed here will be passed to the constructor as option\n     * @param {object} [props] Child component initial state\n     * @returns {Promise}\n     * @example\n     * const parent = new Component('#root');\n     *\n     * class ChildComponent extends Component {}\n     *\n     * // as constructor\n     * parent.setRef({\n     *   id: 'child',\n     *   component: ChildComponent,\n     *   el: '#child',\n     *   // other options here...\n     * });\n     *\n     * // as instance\n     * parent.setRef({\n     *   id: 'child',\n     *   component: new ChildComponent({ ... }).mount('#child', null) // <-- prevent component init\n     * });\n     *\n     * // sync parent - child state\n     * // updates child `parentCount` state whenever `parent.state.count` changes\n     * parent.setRef({\n     *   id: 'child',\n     *   component: ChildComponent,\n     *   el: '#child',\n     *   // other options here...\n     * }, {\n     *   parentCount: (parentState) => parentState.count\n     * });\n     */\n    async setRef(refCfg, props) {\n        let ref;\n        if (!isPlainObject(refCfg)) {\n            throw new TypeError('Invalid reference configuration');\n        }\n        const { component: ChildComponent, el, id, on, ...options } = refCfg;\n        if (Component.isComponent(ChildComponent) && el) {\n            ref = new ChildComponent(options);\n        }\n        else if (ChildComponent instanceof Component) {\n            ref = ChildComponent;\n        }\n        else if (typeof ChildComponent === 'function' && el) {\n            ref = ChildComponent(el, this.state);\n        }\n        else {\n            throw new TypeError('Invalid reference configuration');\n        }\n        // $context gets propagated to every child component\n        // this way we can use `connect`-ed components as reference\n        if (this.$context) {\n            Object.defineProperty(ref, '$context', {\n                enumerable: false,\n                get: () => this.$context,\n            });\n        }\n        if (!id) {\n            throw new Error('Invalid reference id string');\n        }\n        // bind events...\n        if (on) {\n            Object.entries(on).forEach(([name, handler]) => {\n                ref.on(name, handler);\n            });\n        }\n        const { $refs } = this;\n        const prevRef = $refs[id];\n        const refState = {};\n        $refs[id] = ref;\n        this.$refsStore.set(id, ref);\n        if (!ref.$el && el) {\n            ref.mount(el, null);\n        }\n        if (props) {\n            Object.entries(props).forEach(([name, value]) => {\n                if (typeof value === 'function') {\n                    let key = name;\n                    let src = '*';\n                    if (name.includes('>')) {\n                        [src = '*', key] = name.split('>');\n                    }\n                    refState[key] = value(src !== '*' ? this.state[src] : this.state, ref);\n                    this.on(`change:${src}`, (state) => {\n                        ref.setState({ [key]: value(state, ref) });\n                    });\n                }\n                else {\n                    refState[name] = value;\n                }\n            });\n        }\n        const { $el } = this;\n        if (prevRef) {\n            await prevRef.destroy();\n            if (prevRef.$el &&\n                $el.contains(prevRef.$el) &&\n                prevRef.$el.parentElement &&\n                ref.$el) {\n                prevRef.$el.parentElement.replaceChild(ref.$el, prevRef.$el);\n            }\n            else if (ref.$el && !$el.contains(ref.$el)) {\n                $el.appendChild(ref.$el);\n            }\n            return ref.init(refState);\n        }\n        if (ref.$el && !$el.contains(ref.$el)) {\n            $el.appendChild(ref.$el);\n        }\n        return ref.init(refState);\n    }\n    /**\n     * Calls `.destroy()` on every child references and detaches them from the parent component.\n     *\n     * !> This is an async method returning a promise\n     *\n     * @returns {Promise}\n     */\n    async closeRefs() {\n        const { $refsStore } = this;\n        try {\n            const result = await Promise.all([...$refsStore.values()].map((ref) => ref.destroy()));\n            this.$refs = {};\n            $refsStore.clear();\n            return result;\n        }\n        catch (e) {\n            console.error('close refs', e); // tslint:disable-line no-console\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * ```js\n     * destroy()\n     * ```\n     *\n     * Detaches DOM events, instance's events and destroys all references as well.\n     *\n     * > **Lifecycle**\n     * >\n     * > | stage    | hooks     |\n     * > |----------| --------- |\n     * > | `destroy` | `beforeDestroy` |\n     *\n     *\n     * !> This is an async method returning a promise\n     *\n     * @returns {Promise}\n     */\n    async destroy() {\n        await this.beforeDestroy();\n        this.removeListeners();\n        this.off();\n        if (this.$el) {\n            this.$el.removeAttribute(Component.UID_DATA_ATTR); // eslint-disable-line no-console\n        }\n        try {\n            await this.closeRefs();\n            this.$active = false;\n            return Promise.resolve();\n        }\n        catch (e) {\n            console.error('destroy catch: ', e); // tslint:disable-line no-console\n            return Promise.reject(e);\n        }\n    }\n}"
    },
    "augments": [],
    "errors": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": []
  },
  "name": "Component",
  "members": {
    "global": [],
    "inner": [],
    "instance": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "mount(el, [state])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 28
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Mounts a component instance on a DOM element and initializes it.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 30
                    },
                    "end": {
                      "line": 5,
                      "column": 65,
                      "offset": 94
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 30
                },
                "end": {
                  "line": 5,
                  "column": 65,
                  "offset": 94
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> To prevent initialization and just mount the component set ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 96
                    },
                    "end": {
                      "line": 7,
                      "column": 63,
                      "offset": 158
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "state",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 63,
                      "offset": 158
                    },
                    "end": {
                      "line": 7,
                      "column": 70,
                      "offset": 165
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " to ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 70,
                      "offset": 165
                    },
                    "end": {
                      "line": 7,
                      "column": 74,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 74,
                      "offset": 169
                    },
                    "end": {
                      "line": 7,
                      "column": 80,
                      "offset": 175
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 80,
                      "offset": 175
                    },
                    "end": {
                      "line": 7,
                      "column": 81,
                      "offset": 176
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 96
                },
                "end": {
                  "line": 7,
                  "column": 81,
                  "offset": 176
                },
                "indent": []
              }
            },
            {
              "type": "blockquote",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "Lifecycle",
                          "position": {
                            "start": {
                              "line": 9,
                              "column": 5,
                              "offset": 182
                            },
                            "end": {
                              "line": 9,
                              "column": 14,
                              "offset": 191
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 3,
                          "offset": 180
                        },
                        "end": {
                          "line": 9,
                          "column": 16,
                          "offset": 193
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 3,
                      "offset": 180
                    },
                    "end": {
                      "line": 9,
                      "column": 16,
                      "offset": 193
                    },
                    "indent": []
                  }
                },
                {
                  "type": "table",
                  "align": [
                    null,
                    null
                  ],
                  "children": [
                    {
                      "type": "tableRow",
                      "children": [
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "text",
                              "value": "stage",
                              "position": {
                                "start": {
                                  "line": 11,
                                  "column": 5,
                                  "offset": 200
                                },
                                "end": {
                                  "line": 11,
                                  "column": 10,
                                  "offset": 205
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 5,
                              "offset": 200
                            },
                            "end": {
                              "line": 11,
                              "column": 13,
                              "offset": 208
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "text",
                              "value": "hooks",
                              "position": {
                                "start": {
                                  "line": 11,
                                  "column": 16,
                                  "offset": 211
                                },
                                "end": {
                                  "line": 11,
                                  "column": 21,
                                  "offset": 216
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 16,
                              "offset": 211
                            },
                            "end": {
                              "line": 11,
                              "column": 25,
                              "offset": 220
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 198
                        },
                        "end": {
                          "line": 11,
                          "column": 27,
                          "offset": 222
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "tableRow",
                      "children": [
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "mount",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 5,
                                  "offset": 254
                                },
                                "end": {
                                  "line": 13,
                                  "column": 12,
                                  "offset": 261
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 13,
                              "column": 5,
                              "offset": 254
                            },
                            "end": {
                              "line": 13,
                              "column": 12,
                              "offset": 261
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "beforeMount",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 15,
                                  "offset": 264
                                },
                                "end": {
                                  "line": 13,
                                  "column": 28,
                                  "offset": 277
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": " ",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 28,
                                  "offset": 277
                                },
                                "end": {
                                  "line": 13,
                                  "column": 29,
                                  "offset": 278
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "html",
                              "value": "<sup>",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 29,
                                  "offset": 278
                                },
                                "end": {
                                  "line": 13,
                                  "column": 34,
                                  "offset": 283
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": "(1)",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 34,
                                  "offset": 283
                                },
                                "end": {
                                  "line": 13,
                                  "column": 37,
                                  "offset": 286
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "html",
                              "value": "</sup>",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 37,
                                  "offset": 286
                                },
                                "end": {
                                  "line": 13,
                                  "column": 43,
                                  "offset": 292
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": ", ",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 43,
                                  "offset": 292
                                },
                                "end": {
                                  "line": 13,
                                  "column": 45,
                                  "offset": 294
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "inlineCode",
                              "value": "mounted",
                              "position": {
                                "start": {
                                  "line": 13,
                                  "column": 45,
                                  "offset": 294
                                },
                                "end": {
                                  "line": 13,
                                  "column": 54,
                                  "offset": 303
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 13,
                              "column": 15,
                              "offset": 264
                            },
                            "end": {
                              "line": 13,
                              "column": 54,
                              "offset": 303
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 13,
                          "column": 3,
                          "offset": 252
                        },
                        "end": {
                          "line": 13,
                          "column": 56,
                          "offset": 305
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 3,
                      "offset": 198
                    },
                    "end": {
                      "line": 13,
                      "column": 56,
                      "offset": 305
                    },
                    "indent": [
                      3,
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 178
                },
                "end": {
                  "line": 13,
                  "column": 56,
                  "offset": 305
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            },
            {
              "type": "list",
              "ordered": true,
              "start": 1,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Just after attaching the root element (",
                          "position": {
                            "start": {
                              "line": 15,
                              "column": 4,
                              "offset": 310
                            },
                            "end": {
                              "line": 15,
                              "column": 43,
                              "offset": 349
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "this.$el",
                          "position": {
                            "start": {
                              "line": 15,
                              "column": 43,
                              "offset": 349
                            },
                            "end": {
                              "line": 15,
                              "column": 53,
                              "offset": 359
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": ") but before any listener and selector registration.",
                          "position": {
                            "start": {
                              "line": 15,
                              "column": 53,
                              "offset": 359
                            },
                            "end": {
                              "line": 15,
                              "column": 105,
                              "offset": 411
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 15,
                          "column": 4,
                          "offset": 310
                        },
                        "end": {
                          "line": 15,
                          "column": 105,
                          "offset": 411
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 15,
                      "column": 1,
                      "offset": 307
                    },
                    "end": {
                      "line": 15,
                      "column": 105,
                      "offset": 411
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 15,
                  "column": 1,
                  "offset": 307
                },
                "end": {
                  "line": 15,
                  "column": 105,
                  "offset": 411
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 15,
              "column": 105,
              "offset": 411
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Component's root element",
            "lineNumber": 17,
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "string"
                },
                {
                  "type": "NameExpression",
                  "name": "Element"
                }
              ]
            },
            "name": "el"
          },
          {
            "title": "param",
            "description": "Initial state",
            "lineNumber": 18,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NullLiteral"
                  }
                ]
              }
            },
            "name": "state",
            "default": "{}"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 19,
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 98,
            "column": 4
          },
          "end": {
            "line": 118,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000119"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "el",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Component's root element",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 25,
                          "offset": 24
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "string"
                },
                {
                  "type": "NameExpression",
                  "name": "Element"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "state",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial state",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            "default": "{}"
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "mount",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "mount",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#mount"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "init([state])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 23
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initializes the component instance.",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 24
                    },
                    "end": {
                      "line": 4,
                      "column": 36,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 24
                },
                "end": {
                  "line": 4,
                  "column": 36,
                  "offset": 59
                },
                "indent": []
              }
            },
            {
              "type": "blockquote",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "Lifecycle",
                          "position": {
                            "start": {
                              "line": 6,
                              "column": 5,
                              "offset": 65
                            },
                            "end": {
                              "line": 6,
                              "column": 14,
                              "offset": 74
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 63
                        },
                        "end": {
                          "line": 6,
                          "column": 16,
                          "offset": 76
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 3,
                      "offset": 63
                    },
                    "end": {
                      "line": 6,
                      "column": 16,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "table",
                  "align": [
                    null,
                    null
                  ],
                  "children": [
                    {
                      "type": "tableRow",
                      "children": [
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "text",
                              "value": "stage",
                              "position": {
                                "start": {
                                  "line": 8,
                                  "column": 5,
                                  "offset": 83
                                },
                                "end": {
                                  "line": 8,
                                  "column": 10,
                                  "offset": 88
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 8,
                              "column": 5,
                              "offset": 83
                            },
                            "end": {
                              "line": 8,
                              "column": 13,
                              "offset": 91
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "text",
                              "value": "hooks",
                              "position": {
                                "start": {
                                  "line": 8,
                                  "column": 16,
                                  "offset": 94
                                },
                                "end": {
                                  "line": 8,
                                  "column": 21,
                                  "offset": 99
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 8,
                              "column": 16,
                              "offset": 94
                            },
                            "end": {
                              "line": 8,
                              "column": 25,
                              "offset": 103
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 3,
                          "offset": 81
                        },
                        "end": {
                          "line": 8,
                          "column": 27,
                          "offset": 105
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "tableRow",
                      "children": [
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "init",
                              "position": {
                                "start": {
                                  "line": 10,
                                  "column": 5,
                                  "offset": 137
                                },
                                "end": {
                                  "line": 10,
                                  "column": 11,
                                  "offset": 143
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 5,
                              "offset": 137
                            },
                            "end": {
                              "line": 10,
                              "column": 11,
                              "offset": 143
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "initialize",
                              "position": {
                                "start": {
                                  "line": 10,
                                  "column": 14,
                                  "offset": 146
                                },
                                "end": {
                                  "line": 10,
                                  "column": 26,
                                  "offset": 158
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": ", ",
                              "position": {
                                "start": {
                                  "line": 10,
                                  "column": 26,
                                  "offset": 158
                                },
                                "end": {
                                  "line": 10,
                                  "column": 28,
                                  "offset": 160
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "inlineCode",
                              "value": "ready",
                              "position": {
                                "start": {
                                  "line": 10,
                                  "column": 28,
                                  "offset": 160
                                },
                                "end": {
                                  "line": 10,
                                  "column": 35,
                                  "offset": 167
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 14,
                              "offset": 146
                            },
                            "end": {
                              "line": 10,
                              "column": 35,
                              "offset": 167
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 3,
                          "offset": 135
                        },
                        "end": {
                          "line": 10,
                          "column": 37,
                          "offset": 169
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 3,
                      "offset": 81
                    },
                    "end": {
                      "line": 10,
                      "column": 37,
                      "offset": 169
                    },
                    "indent": [
                      3,
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 61
                },
                "end": {
                  "line": 10,
                  "column": 37,
                  "offset": 169
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 10,
              "column": 37,
              "offset": 169
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Initial state",
            "lineNumber": 12,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NullLiteral"
                  }
                ]
              }
            },
            "name": "state",
            "default": "{}"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 13,
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 147,
            "column": 4
          },
          "end": {
            "line": 161,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 162,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000162"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "state",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial state",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            "default": "{}"
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "init",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "init",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#init"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called on instance creation.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "At this stage just the instance options (",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 45
                    },
                    "end": {
                      "line": 3,
                      "column": 42,
                      "offset": 86
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "this.options",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 42,
                      "offset": 86
                    },
                    "end": {
                      "line": 3,
                      "column": 56,
                      "offset": 100
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") are initialized.",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 56,
                      "offset": 100
                    },
                    "end": {
                      "line": 3,
                      "column": 74,
                      "offset": 118
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 45
                },
                "end": {
                  "line": 3,
                  "column": 74,
                  "offset": 118
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": " Overwrite this method with custom logic in your components.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 120
                    },
                    "end": {
                      "line": 5,
                      "column": 61,
                      "offset": 180
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 120
                },
                "end": {
                  "line": 5,
                  "column": 61,
                  "offset": 180
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> Use this hook to tap as early as possible into the component's properties. For example to set a dynamic initial state.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 182
                    },
                    "end": {
                      "line": 7,
                      "column": 122,
                      "offset": 303
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 182
                },
                "end": {
                  "line": 7,
                  "column": 122,
                  "offset": 303
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 122,
              "offset": 303
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 203,
            "column": 4
          },
          "end": {
            "line": 211,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 17
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000212"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "created",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "created",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#created"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called just before mounting the instance onto the root element.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 79,
                      "offset": 78
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 79,
                  "offset": 78
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "At this stage the component is already attached to its root DOM element.",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 80
                    },
                    "end": {
                      "line": 3,
                      "column": 73,
                      "offset": 152
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 80
                },
                "end": {
                  "line": 3,
                  "column": 73,
                  "offset": 152
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Overwrite this method with custom logic in your components.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 154
                    },
                    "end": {
                      "line": 5,
                      "column": 60,
                      "offset": 213
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 154
                },
                "end": {
                  "line": 5,
                  "column": 60,
                  "offset": 213
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 60,
              "offset": 213
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 213,
            "column": 4
          },
          "end": {
            "line": 219,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 220,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 21
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000220"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "beforeMount",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "beforeMount",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#beforeMount"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called when the instance gets mounted onto a DOM element.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "At this stage both children elements (",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 74
                    },
                    "end": {
                      "line": 3,
                      "column": 39,
                      "offset": 112
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "this.$els.*",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 39,
                      "offset": 112
                    },
                    "end": {
                      "line": 3,
                      "column": 52,
                      "offset": 125
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") and event listeners configured in ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 52,
                      "offset": 125
                    },
                    "end": {
                      "line": 3,
                      "column": 88,
                      "offset": 161
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "this.listeners",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 88,
                      "offset": 161
                    },
                    "end": {
                      "line": 3,
                      "column": 104,
                      "offset": 177
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " have been setup.",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 104,
                      "offset": 177
                    },
                    "end": {
                      "line": 3,
                      "column": 121,
                      "offset": 194
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 74
                },
                "end": {
                  "line": 3,
                  "column": 121,
                  "offset": 194
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Overwrite this method with custom logic in your components.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 196
                    },
                    "end": {
                      "line": 5,
                      "column": 60,
                      "offset": 255
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 196
                },
                "end": {
                  "line": 5,
                  "column": 60,
                  "offset": 255
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> Use this method when you need to work with the DOM or manage any side-effect that requires the component to be into the DOM.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 257
                    },
                    "end": {
                      "line": 7,
                      "column": 128,
                      "offset": 384
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 257
                },
                "end": {
                  "line": 7,
                  "column": 128,
                  "offset": 384
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 128,
              "offset": 384
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 221,
            "column": 4
          },
          "end": {
            "line": 229,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 17
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000230"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "mounted",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "mounted",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#mounted"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called before instance initialization.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "At this stage the state and state listeners are not yet been initialized.",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 55
                    },
                    "end": {
                      "line": 3,
                      "column": 74,
                      "offset": 128
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 3,
                  "column": 74,
                  "offset": 128
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Overwrite this method with custom logic in your components.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 130
                    },
                    "end": {
                      "line": 5,
                      "column": 60,
                      "offset": 189
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 130
                },
                "end": {
                  "line": 5,
                  "column": 60,
                  "offset": 189
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> Use this method to set child components by ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 191
                    },
                    "end": {
                      "line": 7,
                      "column": 47,
                      "offset": 237
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "#setRef",
                  "children": [
                    {
                      "type": "text",
                      "value": "setRef",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 48,
                          "offset": 238
                        },
                        "end": {
                          "line": 7,
                          "column": 54,
                          "offset": 244
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 47,
                      "offset": 237
                    },
                    "end": {
                      "line": 7,
                      "column": 64,
                      "offset": 254
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and run any preparatory work on the instance.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 64,
                      "offset": 254
                    },
                    "end": {
                      "line": 7,
                      "column": 110,
                      "offset": 300
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 191
                },
                "end": {
                  "line": 7,
                  "column": 110,
                  "offset": 300
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 110,
              "offset": 300
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 231,
            "column": 4
          },
          "end": {
            "line": 239,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 20
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000240"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "initialize",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "initialize",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#initialize"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called after instance initialization.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "At this stage State and event binding are already in place.",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 54
                    },
                    "end": {
                      "line": 3,
                      "column": 60,
                      "offset": 113
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 54
                },
                "end": {
                  "line": 3,
                  "column": 60,
                  "offset": 113
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Overwrite this method with custom logic in your components.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 115
                    },
                    "end": {
                      "line": 5,
                      "column": 60,
                      "offset": 174
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 115
                },
                "end": {
                  "line": 5,
                  "column": 60,
                  "offset": 174
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 176
                    },
                    "end": {
                      "line": 7,
                      "column": 4,
                      "offset": 179
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "ready",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 4,
                      "offset": 179
                    },
                    "end": {
                      "line": 7,
                      "column": 11,
                      "offset": 186
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " lifecycle can be delayed (",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 11,
                      "offset": 186
                    },
                    "end": {
                      "line": 7,
                      "column": 38,
                      "offset": 213
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "async ready",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 39,
                          "offset": 214
                        },
                        "end": {
                          "line": 7,
                          "column": 50,
                          "offset": 225
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 38,
                      "offset": 213
                    },
                    "end": {
                      "line": 7,
                      "column": 51,
                      "offset": 226
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") by implementing a ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 51,
                      "offset": 226
                    },
                    "end": {
                      "line": 7,
                      "column": 71,
                      "offset": 246
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "packages/core/#async-ready-state",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "readyState",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 72,
                          "offset": 247
                        },
                        "end": {
                          "line": 7,
                          "column": 84,
                          "offset": 259
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 71,
                      "offset": 246
                    },
                    "end": {
                      "line": 7,
                      "column": 119,
                      "offset": 294
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " method.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 119,
                      "offset": 294
                    },
                    "end": {
                      "line": 7,
                      "column": 127,
                      "offset": 302
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 176
                },
                "end": {
                  "line": 7,
                  "column": 127,
                  "offset": 302
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 127,
              "offset": 302
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 241,
            "column": 4
          },
          "end": {
            "line": 249,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 250,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 15
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000250"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "ready",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "ready",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#ready"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called just before closing child refs.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "This hook is called just before destroying the instance. Every property, listener and state feature is still active.",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 55
                    },
                    "end": {
                      "line": 3,
                      "column": 117,
                      "offset": 171
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 3,
                  "column": 117,
                  "offset": 171
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Overwrite this method with custom logic in your components.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 173
                    },
                    "end": {
                      "line": 5,
                      "column": 60,
                      "offset": 232
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 173
                },
                "end": {
                  "line": 5,
                  "column": 60,
                  "offset": 232
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "!> This is an async method. Return a promise in order to suspend the destroy process.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 234
                    },
                    "end": {
                      "line": 7,
                      "column": 86,
                      "offset": 319
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 234
                },
                "end": {
                  "line": 7,
                  "column": 86,
                  "offset": 319
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 86,
              "offset": 319
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 251,
            "column": 4
          },
          "end": {
            "line": 259,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 23
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000260"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "beforeDestroy",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "beforeDestroy",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#beforeDestroy"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "getState(key)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 23
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns a property of the state or a default value if the property is not set.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 25
                    },
                    "end": {
                      "line": 5,
                      "column": 79,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 25
                },
                "end": {
                  "line": 5,
                  "column": 79,
                  "offset": 103
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> In ES6 environments you can use a ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 105
                    },
                    "end": {
                      "line": 7,
                      "column": 38,
                      "offset": 142
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment",
                  "children": [
                    {
                      "type": "text",
                      "value": "destructuring assignment",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 39,
                          "offset": 143
                        },
                        "end": {
                          "line": 7,
                          "column": 63,
                          "offset": 167
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 38,
                      "offset": 142
                    },
                    "end": {
                      "line": 7,
                      "column": 166,
                      "offset": 270
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " instead: ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 166,
                      "offset": 270
                    },
                    "end": {
                      "line": 7,
                      "column": 176,
                      "offset": 280
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "const { name = 'John'} = this.state",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 176,
                      "offset": 280
                    },
                    "end": {
                      "line": 7,
                      "column": 214,
                      "offset": 318
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 105
                },
                "end": {
                  "line": 7,
                  "column": 214,
                  "offset": 318
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 214,
              "offset": 318
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Property to return",
            "lineNumber": 10,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "key"
          },
          {
            "title": "param",
            "description": "Default value",
            "lineNumber": 11,
            "type": {
              "type": "AllLiteral"
            },
            "name": "def"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 12,
            "type": {
              "type": "AllLiteral"
            }
          },
          {
            "title": "example",
            "description": "const instance = new Component().mount('#app', { a: 1 });\n// instance.getState('a') === 1\n\n// instance.getState('b', false) === false",
            "lineNumber": 13
          }
        ],
        "loc": {
          "start": {
            "line": 261,
            "column": 4
          },
          "end": {
            "line": 279,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000280"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "const instance = new Component().mount('#app', { a: 1 });\n// instance.getState('a') === 1\n\n// instance.getState('b', false) === false"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "key",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Property to return",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 19,
                          "offset": 18
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "def",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Default value",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "AllLiteral"
            }
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "AllLiteral"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "getState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "getState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#getState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "shouldUpdateState(string, currentValue, newValue)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 59
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Executes a strict inequality comparison (",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 60
                    },
                    "end": {
                      "line": 4,
                      "column": 42,
                      "offset": 101
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "!==",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 42,
                      "offset": 101
                    },
                    "end": {
                      "line": 4,
                      "column": 47,
                      "offset": 106
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") on the passed-in values and returns the result.",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 47,
                      "offset": 106
                    },
                    "end": {
                      "line": 4,
                      "column": 96,
                      "offset": 155
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 60
                },
                "end": {
                  "line": 4,
                  "column": 96,
                  "offset": 155
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "!> This method is executed on every ",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 1,
                      "offset": 157
                    },
                    "end": {
                      "line": 6,
                      "column": 37,
                      "offset": 193
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "#setstate",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "setState",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 38,
                          "offset": 194
                        },
                        "end": {
                          "line": 6,
                          "column": 48,
                          "offset": 204
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 37,
                      "offset": 193
                    },
                    "end": {
                      "line": 6,
                      "column": 60,
                      "offset": 216
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " call.",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 60,
                      "offset": 216
                    },
                    "end": {
                      "line": 6,
                      "column": 66,
                      "offset": 222
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 157
                },
                "end": {
                  "line": 6,
                  "column": 66,
                  "offset": 222
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "You can overwrite this method with your own validation logic.",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 1,
                      "offset": 224
                    },
                    "end": {
                      "line": 8,
                      "column": 62,
                      "offset": 285
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 224
                },
                "end": {
                  "line": 8,
                  "column": 62,
                  "offset": 285
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 8,
              "column": 62,
              "offset": 285
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "State property name",
            "lineNumber": 10,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "key"
          },
          {
            "title": "param",
            "description": "Value stored in the current state",
            "lineNumber": 11,
            "type": {
              "type": "AllLiteral"
            },
            "name": "currentValue"
          },
          {
            "title": "param",
            "description": "New value",
            "lineNumber": 12,
            "type": {
              "type": "AllLiteral"
            },
            "name": "newValue"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 13,
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 284,
            "column": 4
          },
          "end": {
            "line": 298,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 299,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000299"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "key",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "State property name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 20,
                          "offset": 19
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "currentValue",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Value stored in the current state",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 34,
                          "offset": 33
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                }
              }
            },
            "type": {
              "type": "AllLiteral"
            }
          },
          {
            "title": "param",
            "name": "newValue",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "New value",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 10,
                          "offset": 9
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                }
              }
            },
            "type": {
              "type": "AllLiteral"
            }
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "shouldUpdateState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "shouldUpdateState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#shouldUpdateState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "setState(updater, [silent])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 37
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Updates the internal instance state by creating a shallow copy of the current state and updating the passed-in keys.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 39
                    },
                    "end": {
                      "line": 5,
                      "column": 117,
                      "offset": 155
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 39
                },
                "end": {
                  "line": 5,
                  "column": 117,
                  "offset": 155
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If the computed new state is different from the old one it emits a ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 157
                    },
                    "end": {
                      "line": 7,
                      "column": 68,
                      "offset": 224
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "change:<property>",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 68,
                      "offset": 224
                    },
                    "end": {
                      "line": 7,
                      "column": 87,
                      "offset": 243
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " event for every changed property\nas well as a global ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 87,
                      "offset": 243
                    },
                    "end": {
                      "line": 8,
                      "column": 21,
                      "offset": 297
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "change:*",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 21,
                      "offset": 297
                    },
                    "end": {
                      "line": 8,
                      "column": 31,
                      "offset": 307
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " event.",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 31,
                      "offset": 307
                    },
                    "end": {
                      "line": 8,
                      "column": 38,
                      "offset": 314
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 157
                },
                "end": {
                  "line": 8,
                  "column": 38,
                  "offset": 314
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If the new value argument is a function, it will be executed with the current state as argument.\nThe returned value will be used to update the state.",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 1,
                      "offset": 316
                    },
                    "end": {
                      "line": 11,
                      "column": 53,
                      "offset": 465
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 316
                },
                "end": {
                  "line": 11,
                  "column": 53,
                  "offset": 465
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> To prevent an instance from emitting ",
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 1,
                      "offset": 467
                    },
                    "end": {
                      "line": 13,
                      "column": 41,
                      "offset": 507
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "change:",
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 41,
                      "offset": 507
                    },
                    "end": {
                      "line": 13,
                      "column": 50,
                      "offset": 516
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " events set the second argument to ",
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 50,
                      "offset": 516
                    },
                    "end": {
                      "line": 13,
                      "column": 85,
                      "offset": 551
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 85,
                      "offset": 551
                    },
                    "end": {
                      "line": 13,
                      "column": 91,
                      "offset": 557
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " (silent update).",
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 91,
                      "offset": 557
                    },
                    "end": {
                      "line": 13,
                      "column": 108,
                      "offset": 574
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 13,
                  "column": 1,
                  "offset": 467
                },
                "end": {
                  "line": 13,
                  "column": 108,
                  "offset": 574
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 13,
              "column": 108,
              "offset": 574
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Defines which part of the state must be updated",
            "lineNumber": 15,
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NameExpression",
                  "name": "function"
                }
              ]
            },
            "name": "updater"
          },
          {
            "title": "param",
            "description": "Update the state without emitting change events",
            "lineNumber": 16,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            "name": "silent",
            "default": "false"
          },
          {
            "title": "example",
            "description": "instance.on('change:a', (next, prev) => console.log(next, prev));\ninstance.setState({ a: 1 }); //emits 'change:a' -> logs undefined,1\n\ninstance.setState({ a: 1 }); //nothing happens\ninstance.setState({ a: 2 }, true); //nothing happens, again...\n\n// use the current state to calculate its next value\ninstance.setState(({ a }) => ({a + 1}));",
            "lineNumber": 17
          }
        ],
        "loc": {
          "start": {
            "line": 303,
            "column": 4
          },
          "end": {
            "line": 329,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 353,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000330"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "instance.on('change:a', (next, prev) => console.log(next, prev));\ninstance.setState({ a: 1 }); //emits 'change:a' -> logs undefined,1\n\ninstance.setState({ a: 1 }); //nothing happens\ninstance.setState({ a: 2 }, true); //nothing happens, again...\n\n// use the current state to calculate its next value\ninstance.setState(({ a }) => ({a + 1}));"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "updater",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines which part of the state must be updated",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 48,
                          "offset": 47
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NameExpression",
                  "name": "function"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "silent",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Update the state without emitting change events",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 48,
                          "offset": 47
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "setState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "setState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#setState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "replaceState(newState, [silent])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 42
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Replaces the current state of the instance with a completely new state.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 44
                    },
                    "end": {
                      "line": 5,
                      "column": 72,
                      "offset": 115
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 44
                },
                "end": {
                  "line": 5,
                  "column": 72,
                  "offset": 115
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "!> Note that this methods is un-affected by ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 117
                    },
                    "end": {
                      "line": 7,
                      "column": 45,
                      "offset": 161
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "title": null,
                  "url": "#shouldupdatestate",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "shouldUpdateState",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 46,
                          "offset": 162
                        },
                        "end": {
                          "line": 7,
                          "column": 65,
                          "offset": 181
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 45,
                      "offset": 161
                    },
                    "end": {
                      "line": 7,
                      "column": 86,
                      "offset": 202
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 86,
                      "offset": 202
                    },
                    "end": {
                      "line": 7,
                      "column": 87,
                      "offset": 203
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 117
                },
                "end": {
                  "line": 7,
                  "column": 87,
                  "offset": 203
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 87,
              "offset": 203
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "The new state object",
            "lineNumber": 9,
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "newState"
          },
          {
            "title": "param",
            "description": "Replace the state without emitting change events",
            "lineNumber": 10,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            "name": "silent",
            "default": "false"
          },
          {
            "title": "example",
            "description": "instance.replaceState({ a: 1 });\n// instance.state.a === 1\ninstance.replaceState({ b: 2 });\n// instance.state.b === 2\n// instance.state.a === undefined",
            "lineNumber": 11
          }
        ],
        "loc": {
          "start": {
            "line": 354,
            "column": 4
          },
          "end": {
            "line": 371,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 372,
              "column": 4
            },
            "end": {
              "line": 383,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000372"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "instance.replaceState({ a: 1 });\n// instance.state.a === 1\ninstance.replaceState({ b: 2 });\n// instance.state.b === 2\n// instance.state.a === undefined"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "newState",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The new state object",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 21,
                          "offset": 20
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          },
          {
            "title": "param",
            "name": "silent",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Replace the state without emitting change events",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 49,
                          "offset": 48
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "replaceState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "replaceState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#replaceState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "broadcast(event, [...params])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 39
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Emits a ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 41
                    },
                    "end": {
                      "line": 5,
                      "column": 9,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "broadcast:<eventname>",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 9,
                      "offset": 49
                    },
                    "end": {
                      "line": 5,
                      "column": 32,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " event on every child component listed in ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 32,
                      "offset": 72
                    },
                    "end": {
                      "line": 5,
                      "column": 74,
                      "offset": 114
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "$refs",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 74,
                      "offset": 114
                    },
                    "end": {
                      "line": 5,
                      "column": 81,
                      "offset": 121
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 81,
                      "offset": 121
                    },
                    "end": {
                      "line": 5,
                      "column": 82,
                      "offset": 122
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 41
                },
                "end": {
                  "line": 5,
                  "column": 82,
                  "offset": 122
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 82,
              "offset": 122
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Event name",
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "event"
          },
          {
            "title": "param",
            "description": "Additional arguments to pass to the handler",
            "lineNumber": 8,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "AllLiteral"
                  }
                ]
              }
            },
            "name": "params"
          },
          {
            "title": "example",
            "description": "const child = new Component('#child');\nchild.on('broadcast:log', (str) => console.log(str));\n\ninstance.setRef({ id: 'child', component: child });\ninstance.broadcast('log', 'test') // child component logs 'test'",
            "lineNumber": 9
          }
        ],
        "loc": {
          "start": {
            "line": 384,
            "column": 4
          },
          "end": {
            "line": 399,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 404,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000400"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "const child = new Component('#child');\nchild.on('broadcast:log', (str) => console.log(str));\n\ninstance.setRef({ id: 'child', component: child });\ninstance.broadcast('log', 'test') // child component logs 'test'"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "event",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Event name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "params",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional arguments to pass to the handler",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 44,
                          "offset": 43
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "AllLiteral"
                  }
                ]
              }
            }
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "broadcast",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "broadcast",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#broadcast"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "setListener(string, handler)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 38
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets a DOM event listener.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 40
                    },
                    "end": {
                      "line": 5,
                      "column": 27,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 40
                },
                "end": {
                  "line": 5,
                  "column": 27,
                  "offset": 66
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first argument must be a string composed by an event name (ie ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 68
                    },
                    "end": {
                      "line": 7,
                      "column": 67,
                      "offset": 134
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "click",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 67,
                      "offset": 134
                    },
                    "end": {
                      "line": 7,
                      "column": 74,
                      "offset": 141
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") and a CSS selector (",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 74,
                      "offset": 141
                    },
                    "end": {
                      "line": 7,
                      "column": 96,
                      "offset": 163
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": ".element",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 96,
                      "offset": 163
                    },
                    "end": {
                      "line": 7,
                      "column": 106,
                      "offset": 173
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")\nseparated by a space.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 106,
                      "offset": 173
                    },
                    "end": {
                      "line": 8,
                      "column": 22,
                      "offset": 196
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 68
                },
                "end": {
                  "line": 8,
                  "column": 22,
                  "offset": 196
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If the CSS selector starts with ",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 1,
                      "offset": 198
                    },
                    "end": {
                      "line": 10,
                      "column": 33,
                      "offset": 230
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "@",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 33,
                      "offset": 230
                    },
                    "end": {
                      "line": 10,
                      "column": 36,
                      "offset": 233
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " the listener will be attached to the\ncorresponding reference child element (",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 36,
                      "offset": 233
                    },
                    "end": {
                      "line": 11,
                      "column": 40,
                      "offset": 310
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "this.$els.<element>",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 40,
                      "offset": 310
                    },
                    "end": {
                      "line": 11,
                      "column": 61,
                      "offset": 331
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "), if any.",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 61,
                      "offset": 331
                    },
                    "end": {
                      "line": 11,
                      "column": 71,
                      "offset": 341
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 198
                },
                "end": {
                  "line": 11,
                  "column": 71,
                  "offset": 341
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 11,
              "column": 71,
              "offset": 341
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Event and target element definition. Format `eventName [target]`",
            "lineNumber": 13,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "def"
          },
          {
            "title": "param",
            "description": "Event handler",
            "lineNumber": 14,
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "handler"
          },
          {
            "title": "example",
            "description": "// attach a click handler to a child element\ninstance.setListener('click .button', () => ...)\n\n// attach a click handler to this.$els.btn\ninstance.setListener('click @btn', () => ...)\n\n// attach a click handler to this.$el\ninstance.setListener('click', () => ...)",
            "lineNumber": 15
          }
        ],
        "loc": {
          "start": {
            "line": 405,
            "column": 4
          },
          "end": {
            "line": 430,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 431,
              "column": 4
            },
            "end": {
              "line": 452,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000431"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "// attach a click handler to a child element\ninstance.setListener('click .button', () => ...)\n\n// attach a click handler to this.$els.btn\ninstance.setListener('click @btn', () => ...)\n\n// attach a click handler to this.$el\ninstance.setListener('click', () => ...)"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "def",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Event and target element definition. Format ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 45,
                          "offset": 44
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "eventName [target]",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 45,
                          "offset": 44
                        },
                        "end": {
                          "line": 1,
                          "column": 65,
                          "offset": 64
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "handler",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Event handler",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "function"
            }
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "setListener",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "setListener",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#setListener"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "removeListeners()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 27
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Removes all DOM event listeners attached with ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 29
                    },
                    "end": {
                      "line": 5,
                      "column": 47,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": ".setListener",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 47,
                      "offset": 75
                    },
                    "end": {
                      "line": 5,
                      "column": 61,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 61,
                      "offset": 89
                    },
                    "end": {
                      "line": 5,
                      "column": 62,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 29
                },
                "end": {
                  "line": 5,
                  "column": 62,
                  "offset": 90
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 62,
              "offset": 90
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 453,
            "column": 4
          },
          "end": {
            "line": 460,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 466,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000461"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "removeListeners",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "removeListeners",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#removeListeners"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "setRef(config, [props])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 33
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Attaches a reference to a child component.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 35
                    },
                    "end": {
                      "line": 5,
                      "column": 43,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 35
                },
                "end": {
                  "line": 5,
                  "column": 43,
                  "offset": 77
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If a reference ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 79
                    },
                    "end": {
                      "line": 7,
                      "column": 16,
                      "offset": 94
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "id",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 16,
                      "offset": 94
                    },
                    "end": {
                      "line": 7,
                      "column": 20,
                      "offset": 98
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is already attached, the previous one is destroyed and replaced with the new one.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 20,
                      "offset": 98
                    },
                    "end": {
                      "line": 7,
                      "column": 102,
                      "offset": 180
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 79
                },
                "end": {
                  "line": 7,
                  "column": 102,
                  "offset": 180
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "?> This is an async method returning a promise.",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 1,
                      "offset": 182
                    },
                    "end": {
                      "line": 9,
                      "column": 48,
                      "offset": 229
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 182
                },
                "end": {
                  "line": 9,
                  "column": 48,
                  "offset": 229
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 9,
              "column": 48,
              "offset": 229
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "A child component configuration object",
            "lineNumber": 11,
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "config"
          },
          {
            "title": "param",
            "description": "Reference id. Will be used to set a reference to the child component onto `this.$refs`",
            "lineNumber": 12,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "config.id"
          },
          {
            "title": "param",
            "description": "Component constructor or component instance",
            "lineNumber": 13,
            "type": {
              "type": "NameExpression",
              "name": "component"
            },
            "name": "config.component"
          },
          {
            "title": "param",
            "description": "Child component root element. Ignored if `config.component` is a component instance",
            "lineNumber": 14,
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "string"
                },
                {
                  "type": "NameExpression",
                  "name": "HTMLElement"
                }
              ]
            },
            "name": "config.el"
          },
          {
            "title": "param",
            "description": "Child component event listeners. Format `{ 'eventname': handler }`",
            "lineNumber": 15,
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "name": "config.on"
          },
          {
            "title": "param",
            "description": "* Any other property listed here will be passed to the constructor as option",
            "lineNumber": 16,
            "type": {
              "type": "AllLiteral"
            },
            "name": "config.null"
          },
          {
            "title": "param",
            "description": "Child component initial state",
            "lineNumber": 17,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "object"
              }
            },
            "name": "props"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 18,
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          },
          {
            "title": "example",
            "description": "const parent = new Component('#root');\n\nclass ChildComponent extends Component {}\n\n// as constructor\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n});\n\n// as instance\nparent.setRef({\n  id: 'child',\n  component: new ChildComponent({ ... }).mount('#child', null) // <-- prevent component init\n});\n\n// sync parent - child state\n// updates child `parentCount` state whenever `parent.state.count` changes\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n}, {\n  parentCount: (parentState) => parentState.count\n});",
            "lineNumber": 19
          }
        ],
        "loc": {
          "start": {
            "line": 467,
            "column": 4
          },
          "end": {
            "line": 515,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 516,
              "column": 4
            },
            "end": {
              "line": 595,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000516"
        },
        "augments": [],
        "errors": [
          {
            "message": "An explicit parameter named config was specified but didn't match inferred information refCfg, props",
            "commentLineNumber": 11
          }
        ],
        "examples": [
          {
            "description": "const parent = new Component('#root');\n\nclass ChildComponent extends Component {}\n\n// as constructor\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n});\n\n// as instance\nparent.setRef({\n  id: 'child',\n  component: new ChildComponent({ ... }).mount('#child', null) // <-- prevent component init\n});\n\n// sync parent - child state\n// updates child `parentCount` state whenever `parent.state.count` changes\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n}, {\n  parentCount: (parentState) => parentState.count\n});"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "refCfg",
            "lineNumber": 516
          },
          {
            "title": "param",
            "name": "props",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Child component initial state",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          },
          {
            "title": "param",
            "name": "config",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "A child component configuration object",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 39,
                          "offset": 38
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "properties": [
              {
                "title": "param",
                "name": "config.id",
                "lineNumber": 12,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Reference id. Will be used to set a reference to the child component onto ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 75,
                              "offset": 74
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "this.$refs",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 75,
                              "offset": 74
                            },
                            "end": {
                              "line": 1,
                              "column": 87,
                              "offset": 86
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 87,
                          "offset": 86
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 87,
                      "offset": 86
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "title": "param",
                "name": "config.component",
                "lineNumber": 13,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Component constructor or component instance",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 44,
                              "offset": 43
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 44,
                          "offset": 43
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "component"
                }
              },
              {
                "title": "param",
                "name": "config.el",
                "lineNumber": 14,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Child component root element. Ignored if ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 42,
                              "offset": 41
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "config.component",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 42,
                              "offset": 41
                            },
                            "end": {
                              "line": 1,
                              "column": 60,
                              "offset": 59
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " is a component instance",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 60,
                              "offset": 59
                            },
                            "end": {
                              "line": 1,
                              "column": 84,
                              "offset": 83
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 84,
                          "offset": 83
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 84,
                      "offset": 83
                    }
                  }
                },
                "type": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    },
                    {
                      "type": "NameExpression",
                      "name": "HTMLElement"
                    }
                  ]
                }
              },
              {
                "title": "param",
                "name": "config.on",
                "lineNumber": 15,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Child component event listeners. Format ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 41,
                              "offset": 40
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "{ 'eventname': handler }",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 41,
                              "offset": 40
                            },
                            "end": {
                              "line": 1,
                              "column": 67,
                              "offset": 66
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              {
                "title": "param",
                "name": "config.null",
                "lineNumber": 16,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "list",
                      "ordered": false,
                      "start": null,
                      "loose": false,
                      "children": [
                        {
                          "type": "listItem",
                          "loose": false,
                          "checked": null,
                          "children": [
                            {
                              "type": "paragraph",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Any other property listed here will be passed to the constructor as option",
                                  "position": {
                                    "start": {
                                      "line": 1,
                                      "column": 3,
                                      "offset": 2
                                    },
                                    "end": {
                                      "line": 1,
                                      "column": 77,
                                      "offset": 76
                                    },
                                    "indent": []
                                  }
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 3,
                                  "offset": 2
                                },
                                "end": {
                                  "line": 1,
                                  "column": 77,
                                  "offset": 76
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 77,
                              "offset": 76
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 77,
                          "offset": 76
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    }
                  }
                },
                "type": {
                  "type": "AllLiteral"
                }
              }
            ]
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "setRef",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "setRef",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#setRef"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Calls ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": ".destroy()",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " on every child references and detaches them from the parent component.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "end": {
                      "line": 1,
                      "column": 90,
                      "offset": 89
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "!> This is an async method returning a promise",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 91
                    },
                    "end": {
                      "line": 3,
                      "column": 47,
                      "offset": 137
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 91
                },
                "end": {
                  "line": 3,
                  "column": 47,
                  "offset": 137
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 47,
              "offset": 137
            }
          }
        },
        "tags": [
          {
            "title": "returns",
            "description": null,
            "lineNumber": 5,
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 596,
            "column": 4
          },
          "end": {
            "line": 602,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 603,
              "column": 4
            },
            "end": {
              "line": 615,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000603"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "closeRefs",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "closeRefs",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#closeRefs"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "destroy()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 19
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Detaches DOM events, instance's events and destroys all references as well.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 21
                    },
                    "end": {
                      "line": 5,
                      "column": 76,
                      "offset": 96
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 21
                },
                "end": {
                  "line": 5,
                  "column": 76,
                  "offset": 96
                },
                "indent": []
              }
            },
            {
              "type": "blockquote",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "Lifecycle",
                          "position": {
                            "start": {
                              "line": 7,
                              "column": 5,
                              "offset": 102
                            },
                            "end": {
                              "line": 7,
                              "column": 14,
                              "offset": 111
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 3,
                          "offset": 100
                        },
                        "end": {
                          "line": 7,
                          "column": 16,
                          "offset": 113
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 3,
                      "offset": 100
                    },
                    "end": {
                      "line": 7,
                      "column": 16,
                      "offset": 113
                    },
                    "indent": []
                  }
                },
                {
                  "type": "table",
                  "align": [
                    null,
                    null
                  ],
                  "children": [
                    {
                      "type": "tableRow",
                      "children": [
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "text",
                              "value": "stage",
                              "position": {
                                "start": {
                                  "line": 9,
                                  "column": 5,
                                  "offset": 120
                                },
                                "end": {
                                  "line": 9,
                                  "column": 10,
                                  "offset": 125
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 9,
                              "column": 5,
                              "offset": 120
                            },
                            "end": {
                              "line": 9,
                              "column": 13,
                              "offset": 128
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "text",
                              "value": "hooks",
                              "position": {
                                "start": {
                                  "line": 9,
                                  "column": 16,
                                  "offset": 131
                                },
                                "end": {
                                  "line": 9,
                                  "column": 21,
                                  "offset": 136
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 9,
                              "column": 16,
                              "offset": 131
                            },
                            "end": {
                              "line": 9,
                              "column": 25,
                              "offset": 140
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 3,
                          "offset": 118
                        },
                        "end": {
                          "line": 9,
                          "column": 27,
                          "offset": 142
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "tableRow",
                      "children": [
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "destroy",
                              "position": {
                                "start": {
                                  "line": 11,
                                  "column": 5,
                                  "offset": 174
                                },
                                "end": {
                                  "line": 11,
                                  "column": 14,
                                  "offset": 183
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 5,
                              "offset": 174
                            },
                            "end": {
                              "line": 11,
                              "column": 14,
                              "offset": 183
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "tableCell",
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "beforeDestroy",
                              "position": {
                                "start": {
                                  "line": 11,
                                  "column": 17,
                                  "offset": 186
                                },
                                "end": {
                                  "line": 11,
                                  "column": 32,
                                  "offset": 201
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 17,
                              "offset": 186
                            },
                            "end": {
                              "line": 11,
                              "column": 32,
                              "offset": 201
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 172
                        },
                        "end": {
                          "line": 11,
                          "column": 34,
                          "offset": 203
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 3,
                      "offset": 118
                    },
                    "end": {
                      "line": 11,
                      "column": 34,
                      "offset": 203
                    },
                    "indent": [
                      3,
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 98
                },
                "end": {
                  "line": 11,
                  "column": 34,
                  "offset": 203
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "!> This is an async method returning a promise",
                  "position": {
                    "start": {
                      "line": 14,
                      "column": 1,
                      "offset": 206
                    },
                    "end": {
                      "line": 14,
                      "column": 47,
                      "offset": 252
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 14,
                  "column": 1,
                  "offset": 206
                },
                "end": {
                  "line": 14,
                  "column": 47,
                  "offset": 252
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 14,
              "column": 47,
              "offset": 252
            }
          }
        },
        "tags": [
          {
            "title": "returns",
            "description": null,
            "lineNumber": 16,
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 616,
            "column": 4
          },
          "end": {
            "line": 633,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 634,
              "column": 4
            },
            "end": {
              "line": 650,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000634"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "destroy",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "destroy",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#destroy"
      }
    ],
    "events": [],
    "static": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "Component.isComponent(obj)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 36
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks whether the passed-in value is a Component constructor.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 38
                    },
                    "end": {
                      "line": 5,
                      "column": 63,
                      "offset": 100
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 38
                },
                "end": {
                  "line": 5,
                  "column": 63,
                  "offset": 100
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 63,
              "offset": 100
            }
          }
        },
        "tags": [
          {
            "title": "static",
            "description": null,
            "lineNumber": 7
          },
          {
            "title": "param",
            "description": null,
            "lineNumber": 8,
            "type": {
              "type": "AllLiteral"
            },
            "name": "value"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 9,
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 81,
            "column": 4
          },
          "end": {
            "line": 91,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000092"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "value",
            "lineNumber": 8,
            "type": {
              "type": "AllLiteral"
            }
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "scope": "static",
        "name": "<static> isComponent",
        "kind": "function",
        "memberof": "Component",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "isComponent",
            "kind": "function",
            "scope": "static"
          }
        ],
        "namespace": "Component.isComponent"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "Component.UID_DATA_ATTR",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 33
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Component root element attribute marker.",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 34
                    },
                    "end": {
                      "line": 4,
                      "column": 41,
                      "offset": 74
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 34
                },
                "end": {
                  "line": 4,
                  "column": 41,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 41,
              "offset": 74
            }
          }
        },
        "tags": [
          {
            "title": "static",
            "description": null,
            "lineNumber": 6
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 652,
            "column": 0
          },
          "end": {
            "line": 660,
            "column": 3
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 661,
              "column": 0
            },
            "end": {
              "line": 661,
              "column": 37
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000661"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "scope": "static",
        "name": "<static> UID_DATA_ATTR",
        "memberof": "Component",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "UID_DATA_ATTR",
            "scope": "static"
          }
        ],
        "namespace": "Component.UID_DATA_ATTR"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "Component.defaultOptions()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 36
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns an object with default options.",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 37
                    },
                    "end": {
                      "line": 4,
                      "column": 40,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 37
                },
                "end": {
                  "line": 4,
                  "column": 40,
                  "offset": 76
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 40,
              "offset": 76
            }
          }
        },
        "tags": [
          {
            "title": "static",
            "description": null,
            "lineNumber": 6
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 662,
            "column": 0
          },
          "end": {
            "line": 670,
            "column": 3
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 671,
              "column": 0
            },
            "end": {
              "line": 671,
              "column": 38
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000671"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "scope": "static",
        "name": "<static> defaultOptions",
        "kind": "function",
        "memberof": "Component",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "defaultOptions",
            "kind": "function",
            "scope": "static"
          }
        ],
        "namespace": "Component.defaultOptions"
      }
    ]
  },
  "path": [
    {
      "name": "Component",
      "kind": "class"
    }
  ],
  "namespace": "Component"
}