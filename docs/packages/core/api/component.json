{
  "description": {
    "type": "root",
    "children": [
      {
        "type": "paragraph",
        "children": [
          {
            "type": "inlineCode",
            "value": "Component",
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 12,
                "offset": 11
              },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " is an extensible class constructor which provides the building block of Yuzu component system.",
            "position": {
              "start": {
                "line": 1,
                "column": 12,
                "offset": 11
              },
              "end": {
                "line": 1,
                "column": 107,
                "offset": 106
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 107,
            "offset": 106
          },
          "indent": []
        }
      },
      {
        "type": "code",
        "lang": "js",
        "value": "const instance = new Component({ ... })",
        "position": {
          "start": {
            "line": 3,
            "column": 1,
            "offset": 108
          },
          "end": {
            "line": 5,
            "column": 4,
            "offset": 157
          },
          "indent": [
            1,
            1
          ]
        }
      },
      {
        "type": "blockquote",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "strong",
                "children": [
                  {
                    "type": "text",
                    "value": "Lifecycle",
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 5,
                        "offset": 163
                      },
                      "end": {
                        "line": 7,
                        "column": 14,
                        "offset": 172
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 7,
                    "column": 3,
                    "offset": 161
                  },
                  "end": {
                    "line": 7,
                    "column": 16,
                    "offset": 174
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 7,
                "column": 3,
                "offset": 161
              },
              "end": {
                "line": 7,
                "column": 16,
                "offset": 174
              },
              "indent": []
            }
          },
          {
            "type": "table",
            "align": [
              null,
              null
            ],
            "children": [
              {
                "type": "tableRow",
                "children": [
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "text",
                        "value": "stage",
                        "position": {
                          "start": {
                            "line": 9,
                            "column": 5,
                            "offset": 181
                          },
                          "end": {
                            "line": 9,
                            "column": 10,
                            "offset": 186
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 5,
                        "offset": 181
                      },
                      "end": {
                        "line": 9,
                        "column": 13,
                        "offset": 189
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "text",
                        "value": "hooks",
                        "position": {
                          "start": {
                            "line": 9,
                            "column": 16,
                            "offset": 192
                          },
                          "end": {
                            "line": 9,
                            "column": 21,
                            "offset": 197
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 16,
                        "offset": 192
                      },
                      "end": {
                        "line": 9,
                        "column": 25,
                        "offset": 201
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 9,
                    "column": 3,
                    "offset": 179
                  },
                  "end": {
                    "line": 9,
                    "column": 27,
                    "offset": 203
                  },
                  "indent": []
                }
              },
              {
                "type": "tableRow",
                "children": [
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "create",
                        "position": {
                          "start": {
                            "line": 11,
                            "column": 5,
                            "offset": 235
                          },
                          "end": {
                            "line": 11,
                            "column": 13,
                            "offset": 243
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 11,
                        "column": 5,
                        "offset": 235
                      },
                      "end": {
                        "line": 11,
                        "column": 13,
                        "offset": 243
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "tableCell",
                    "children": [
                      {
                        "type": "inlineCode",
                        "value": "created",
                        "position": {
                          "start": {
                            "line": 11,
                            "column": 16,
                            "offset": 246
                          },
                          "end": {
                            "line": 11,
                            "column": 25,
                            "offset": 255
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 11,
                        "column": 16,
                        "offset": 246
                      },
                      "end": {
                        "line": 11,
                        "column": 25,
                        "offset": 255
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 11,
                    "column": 3,
                    "offset": 233
                  },
                  "end": {
                    "line": 11,
                    "column": 27,
                    "offset": 257
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 9,
                "column": 3,
                "offset": 179
              },
              "end": {
                "line": 11,
                "column": 27,
                "offset": 257
              },
              "indent": [
                3,
                3
              ]
            }
          }
        ],
        "position": {
          "start": {
            "line": 7,
            "column": 1,
            "offset": 159
          },
          "end": {
            "line": 11,
            "column": 27,
            "offset": 257
          },
          "indent": [
            1,
            1,
            1,
            1
          ]
        }
      },
      {
        "type": "heading",
        "depth": 4,
        "children": [
          {
            "type": "text",
            "value": "Instance properties",
            "position": {
              "start": {
                "line": 13,
                "column": 6,
                "offset": 264
              },
              "end": {
                "line": 13,
                "column": 25,
                "offset": 283
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 13,
            "column": 1,
            "offset": 259
          },
          "end": {
            "line": 13,
            "column": 25,
            "offset": 283
          },
          "indent": []
        }
      },
      {
        "type": "list",
        "ordered": false,
        "start": null,
        "loose": false,
        "children": [
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$active",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 3,
                        "offset": 287
                      },
                      "end": {
                        "line": 15,
                        "column": 12,
                        "offset": 296
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 12,
                        "offset": 296
                      },
                      "end": {
                        "line": 15,
                        "column": 13,
                        "offset": 297
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "Boolean",
                        "position": {
                          "start": {
                            "line": 15,
                            "column": 15,
                            "offset": 299
                          },
                          "end": {
                            "line": 15,
                            "column": 22,
                            "offset": 306
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 13,
                        "offset": 297
                      },
                      "end": {
                        "line": 15,
                        "column": 24,
                        "offset": 308
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": ",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 24,
                        "offset": 308
                      },
                      "end": {
                        "line": 15,
                        "column": 26,
                        "offset": 310
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 26,
                        "offset": 310
                      },
                      "end": {
                        "line": 15,
                        "column": 32,
                        "offset": 316
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " if the instance is mounted and initialized",
                    "position": {
                      "start": {
                        "line": 15,
                        "column": 32,
                        "offset": 316
                      },
                      "end": {
                        "line": 15,
                        "column": 75,
                        "offset": 359
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 15,
                    "column": 3,
                    "offset": 287
                  },
                  "end": {
                    "line": 15,
                    "column": 75,
                    "offset": 359
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 15,
                "column": 1,
                "offset": 285
              },
              "end": {
                "line": 15,
                "column": 75,
                "offset": 359
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "options",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 3,
                        "offset": 362
                      },
                      "end": {
                        "line": 16,
                        "column": 12,
                        "offset": 371
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 12,
                        "offset": 371
                      },
                      "end": {
                        "line": 16,
                        "column": 13,
                        "offset": 372
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 15,
                            "offset": 374
                          },
                          "end": {
                            "line": 16,
                            "column": 17,
                            "offset": 376
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 16,
                                "column": 18,
                                "offset": 377
                              },
                              "end": {
                                "line": 16,
                                "column": 24,
                                "offset": 383
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 17,
                            "offset": 376
                          },
                          "end": {
                            "line": 16,
                            "column": 25,
                            "offset": 384
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": any }",
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 25,
                            "offset": 384
                          },
                          "end": {
                            "line": 16,
                            "column": 32,
                            "offset": 391
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 13,
                        "offset": 372
                      },
                      "end": {
                        "line": 16,
                        "column": 34,
                        "offset": 393
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": instance options (see ",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 34,
                        "offset": 393
                      },
                      "end": {
                        "line": 16,
                        "column": 58,
                        "offset": 417
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#defaultOptions",
                    "children": [
                      {
                        "type": "text",
                        "value": "defaultOptions",
                        "position": {
                          "start": {
                            "line": 16,
                            "column": 59,
                            "offset": 418
                          },
                          "end": {
                            "line": 16,
                            "column": 73,
                            "offset": 432
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 58,
                        "offset": 417
                      },
                      "end": {
                        "line": 16,
                        "column": 91,
                        "offset": 450
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 16,
                        "column": 91,
                        "offset": 450
                      },
                      "end": {
                        "line": 16,
                        "column": 92,
                        "offset": 451
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 16,
                    "column": 3,
                    "offset": 362
                  },
                  "end": {
                    "line": 16,
                    "column": 92,
                    "offset": 451
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 16,
                "column": 1,
                "offset": 360
              },
              "end": {
                "line": 16,
                "column": 92,
                "offset": 451
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "state",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 3,
                        "offset": 454
                      },
                      "end": {
                        "line": 17,
                        "column": 10,
                        "offset": 461
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 10,
                        "offset": 461
                      },
                      "end": {
                        "line": 17,
                        "column": 11,
                        "offset": 462
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 13,
                            "offset": 464
                          },
                          "end": {
                            "line": 17,
                            "column": 15,
                            "offset": 466
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 17,
                                "column": 16,
                                "offset": 467
                              },
                              "end": {
                                "line": 17,
                                "column": 22,
                                "offset": 473
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 15,
                            "offset": 466
                          },
                          "end": {
                            "line": 17,
                            "column": 23,
                            "offset": 474
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": any }",
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 23,
                            "offset": 474
                          },
                          "end": {
                            "line": 17,
                            "column": 30,
                            "offset": 481
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 11,
                        "offset": 462
                      },
                      "end": {
                        "line": 17,
                        "column": 32,
                        "offset": 483
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": instance state (see ",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 32,
                        "offset": 483
                      },
                      "end": {
                        "line": 17,
                        "column": 54,
                        "offset": 505
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#setState",
                    "children": [
                      {
                        "type": "text",
                        "value": "setState",
                        "position": {
                          "start": {
                            "line": 17,
                            "column": 55,
                            "offset": 506
                          },
                          "end": {
                            "line": 17,
                            "column": 63,
                            "offset": 514
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 54,
                        "offset": 505
                      },
                      "end": {
                        "line": 17,
                        "column": 75,
                        "offset": 526
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 17,
                        "column": 75,
                        "offset": 526
                      },
                      "end": {
                        "line": 17,
                        "column": 76,
                        "offset": 527
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 17,
                    "column": 3,
                    "offset": 454
                  },
                  "end": {
                    "line": 17,
                    "column": 76,
                    "offset": 527
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 17,
                "column": 1,
                "offset": 452
              },
              "end": {
                "line": 17,
                "column": 76,
                "offset": 527
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$el",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 3,
                        "offset": 530
                      },
                      "end": {
                        "line": 18,
                        "column": 8,
                        "offset": 535
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 8,
                        "offset": 535
                      },
                      "end": {
                        "line": 18,
                        "column": 9,
                        "offset": 536
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "linkReference",
                        "identifier": "1",
                        "referenceType": "full",
                        "children": [
                          {
                            "type": "text",
                            "value": "Element",
                            "position": {
                              "start": {
                                "line": 18,
                                "column": 12,
                                "offset": 539
                              },
                              "end": {
                                "line": 18,
                                "column": 19,
                                "offset": 546
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 18,
                            "column": 11,
                            "offset": 538
                          },
                          "end": {
                            "line": 18,
                            "column": 23,
                            "offset": 550
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 9,
                        "offset": 536
                      },
                      "end": {
                        "line": 18,
                        "column": 25,
                        "offset": 552
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": The instance root DOM element (see ",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 25,
                        "offset": 552
                      },
                      "end": {
                        "line": 18,
                        "column": 62,
                        "offset": 589
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#mount",
                    "children": [
                      {
                        "type": "text",
                        "value": "mount",
                        "position": {
                          "start": {
                            "line": 18,
                            "column": 63,
                            "offset": 590
                          },
                          "end": {
                            "line": 18,
                            "column": 68,
                            "offset": 595
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 62,
                        "offset": 589
                      },
                      "end": {
                        "line": 18,
                        "column": 77,
                        "offset": 604
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 18,
                        "column": 77,
                        "offset": 604
                      },
                      "end": {
                        "line": 18,
                        "column": 78,
                        "offset": 605
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 18,
                    "column": 3,
                    "offset": 530
                  },
                  "end": {
                    "line": 18,
                    "column": 78,
                    "offset": 605
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 18,
                "column": 1,
                "offset": 528
              },
              "end": {
                "line": 18,
                "column": 78,
                "offset": 605
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$els",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 3,
                        "offset": 608
                      },
                      "end": {
                        "line": 19,
                        "column": 9,
                        "offset": 614
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 9,
                        "offset": 614
                      },
                      "end": {
                        "line": 19,
                        "column": 10,
                        "offset": 615
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 12,
                            "offset": 617
                          },
                          "end": {
                            "line": 19,
                            "column": 14,
                            "offset": 619
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 19,
                                "column": 15,
                                "offset": 620
                              },
                              "end": {
                                "line": 19,
                                "column": 21,
                                "offset": 626
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 14,
                            "offset": 619
                          },
                          "end": {
                            "line": 19,
                            "column": 22,
                            "offset": 627
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": ",
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 22,
                            "offset": 627
                          },
                          "end": {
                            "line": 19,
                            "column": 24,
                            "offset": 629
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "1",
                        "referenceType": "full",
                        "children": [
                          {
                            "type": "text",
                            "value": "Element",
                            "position": {
                              "start": {
                                "line": 19,
                                "column": 25,
                                "offset": 630
                              },
                              "end": {
                                "line": 19,
                                "column": 32,
                                "offset": 637
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 24,
                            "offset": 629
                          },
                          "end": {
                            "line": 19,
                            "column": 36,
                            "offset": 641
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " }",
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 36,
                            "offset": 641
                          },
                          "end": {
                            "line": 19,
                            "column": 38,
                            "offset": 643
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 10,
                        "offset": 615
                      },
                      "end": {
                        "line": 19,
                        "column": 40,
                        "offset": 645
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping references to component's child DOM elements (see ",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 40,
                        "offset": 645
                      },
                      "end": {
                        "line": 19,
                        "column": 107,
                        "offset": 712
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#selectors",
                    "children": [
                      {
                        "type": "text",
                        "value": "selectors",
                        "position": {
                          "start": {
                            "line": 19,
                            "column": 108,
                            "offset": 713
                          },
                          "end": {
                            "line": 19,
                            "column": 117,
                            "offset": 722
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 107,
                        "offset": 712
                      },
                      "end": {
                        "line": 19,
                        "column": 130,
                        "offset": 735
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 19,
                        "column": 130,
                        "offset": 735
                      },
                      "end": {
                        "line": 19,
                        "column": 131,
                        "offset": 736
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 19,
                    "column": 3,
                    "offset": 608
                  },
                  "end": {
                    "line": 19,
                    "column": 131,
                    "offset": 736
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 19,
                "column": 1,
                "offset": 606
              },
              "end": {
                "line": 19,
                "column": 131,
                "offset": 736
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "$refs",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 3,
                        "offset": 739
                      },
                      "end": {
                        "line": 20,
                        "column": 10,
                        "offset": 746
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 10,
                        "offset": 746
                      },
                      "end": {
                        "line": 20,
                        "column": 11,
                        "offset": 747
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 13,
                            "offset": 749
                          },
                          "end": {
                            "line": 20,
                            "column": 15,
                            "offset": 751
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 20,
                                "column": 16,
                                "offset": 752
                              },
                              "end": {
                                "line": 20,
                                "column": 22,
                                "offset": 758
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 15,
                            "offset": 751
                          },
                          "end": {
                            "line": 20,
                            "column": 23,
                            "offset": 759
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": Component }",
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 23,
                            "offset": 759
                          },
                          "end": {
                            "line": 20,
                            "column": 36,
                            "offset": 772
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 11,
                        "offset": 747
                      },
                      "end": {
                        "line": 20,
                        "column": 38,
                        "offset": 774
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping references to child components (see ",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 38,
                        "offset": 774
                      },
                      "end": {
                        "line": 20,
                        "column": 91,
                        "offset": 827
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#setRef",
                    "children": [
                      {
                        "type": "text",
                        "value": "setRef",
                        "position": {
                          "start": {
                            "line": 20,
                            "column": 92,
                            "offset": 828
                          },
                          "end": {
                            "line": 20,
                            "column": 98,
                            "offset": 834
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 91,
                        "offset": 827
                      },
                      "end": {
                        "line": 20,
                        "column": 108,
                        "offset": 844
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 20,
                        "column": 108,
                        "offset": 844
                      },
                      "end": {
                        "line": 20,
                        "column": 109,
                        "offset": 845
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 20,
                    "column": 3,
                    "offset": 739
                  },
                  "end": {
                    "line": 20,
                    "column": 109,
                    "offset": 845
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 20,
                "column": 1,
                "offset": 737
              },
              "end": {
                "line": 20,
                "column": 109,
                "offset": 845
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "selectors",
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 3,
                        "offset": 848
                      },
                      "end": {
                        "line": 21,
                        "column": 14,
                        "offset": 859
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 14,
                        "offset": 859
                      },
                      "end": {
                        "line": 21,
                        "column": 15,
                        "offset": 860
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 21,
                            "column": 17,
                            "offset": 862
                          },
                          "end": {
                            "line": 21,
                            "column": 19,
                            "offset": 864
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 21,
                                "column": 20,
                                "offset": 865
                              },
                              "end": {
                                "line": 21,
                                "column": 26,
                                "offset": 871
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 21,
                            "column": 19,
                            "offset": 864
                          },
                          "end": {
                            "line": 21,
                            "column": 27,
                            "offset": 872
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": string }",
                        "position": {
                          "start": {
                            "line": 21,
                            "column": 27,
                            "offset": 872
                          },
                          "end": {
                            "line": 21,
                            "column": 37,
                            "offset": 882
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 15,
                        "offset": 860
                      },
                      "end": {
                        "line": 21,
                        "column": 39,
                        "offset": 884
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping a child element's reference name and a CSS selector",
                    "position": {
                      "start": {
                        "line": 21,
                        "column": 39,
                        "offset": 884
                      },
                      "end": {
                        "line": 21,
                        "column": 107,
                        "offset": 952
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 21,
                    "column": 3,
                    "offset": 848
                  },
                  "end": {
                    "line": 21,
                    "column": 107,
                    "offset": 952
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 21,
                "column": 1,
                "offset": 846
              },
              "end": {
                "line": 21,
                "column": 107,
                "offset": 952
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "listeners",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 3,
                        "offset": 955
                      },
                      "end": {
                        "line": 22,
                        "column": 14,
                        "offset": 966
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 14,
                        "offset": 966
                      },
                      "end": {
                        "line": 22,
                        "column": 15,
                        "offset": 967
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 17,
                            "offset": 969
                          },
                          "end": {
                            "line": 22,
                            "column": 19,
                            "offset": 971
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 22,
                                "column": 20,
                                "offset": 972
                              },
                              "end": {
                                "line": 22,
                                "column": 26,
                                "offset": 978
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 19,
                            "offset": 971
                          },
                          "end": {
                            "line": 22,
                            "column": 27,
                            "offset": 979
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": function|string }",
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 27,
                            "offset": 979
                          },
                          "end": {
                            "line": 22,
                            "column": 46,
                            "offset": 998
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 15,
                        "offset": 967
                      },
                      "end": {
                        "line": 22,
                        "column": 48,
                        "offset": 1000
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping DOM listeners and handlers (see ",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 48,
                        "offset": 1000
                      },
                      "end": {
                        "line": 22,
                        "column": 97,
                        "offset": 1049
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "#setListener",
                    "children": [
                      {
                        "type": "text",
                        "value": "setListener",
                        "position": {
                          "start": {
                            "line": 22,
                            "column": 98,
                            "offset": 1050
                          },
                          "end": {
                            "line": 22,
                            "column": 109,
                            "offset": 1061
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 97,
                        "offset": 1049
                      },
                      "end": {
                        "line": 22,
                        "column": 124,
                        "offset": 1076
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ")",
                    "position": {
                      "start": {
                        "line": 22,
                        "column": 124,
                        "offset": 1076
                      },
                      "end": {
                        "line": 22,
                        "column": 125,
                        "offset": 1077
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 22,
                    "column": 3,
                    "offset": 955
                  },
                  "end": {
                    "line": 22,
                    "column": 125,
                    "offset": 1077
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 22,
                "column": 1,
                "offset": 953
              },
              "end": {
                "line": 22,
                "column": 125,
                "offset": 1077
              },
              "indent": []
            }
          },
          {
            "type": "listItem",
            "loose": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "inlineCode",
                    "value": "actions",
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 3,
                        "offset": 1080
                      },
                      "end": {
                        "line": 23,
                        "column": 12,
                        "offset": 1089
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 12,
                        "offset": 1089
                      },
                      "end": {
                        "line": 23,
                        "column": 13,
                        "offset": 1090
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "{ ",
                        "position": {
                          "start": {
                            "line": 23,
                            "column": 15,
                            "offset": 1092
                          },
                          "end": {
                            "line": 23,
                            "column": 17,
                            "offset": 1094
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "linkReference",
                        "identifier": "string",
                        "referenceType": "shortcut",
                        "children": [
                          {
                            "type": "text",
                            "value": "string",
                            "position": {
                              "start": {
                                "line": 23,
                                "column": 18,
                                "offset": 1095
                              },
                              "end": {
                                "line": 23,
                                "column": 24,
                                "offset": 1101
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 23,
                            "column": 17,
                            "offset": 1094
                          },
                          "end": {
                            "line": 23,
                            "column": 25,
                            "offset": 1102
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ": function|string }",
                        "position": {
                          "start": {
                            "line": 23,
                            "column": 25,
                            "offset": 1102
                          },
                          "end": {
                            "line": 23,
                            "column": 44,
                            "offset": 1121
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 13,
                        "offset": 1090
                      },
                      "end": {
                        "line": 23,
                        "column": 46,
                        "offset": 1123
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ": Object mapping state keys and functions to executed on state update",
                    "position": {
                      "start": {
                        "line": 23,
                        "column": 46,
                        "offset": 1123
                      },
                      "end": {
                        "line": 23,
                        "column": 115,
                        "offset": 1192
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 23,
                    "column": 3,
                    "offset": 1080
                  },
                  "end": {
                    "line": 23,
                    "column": 115,
                    "offset": 1192
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 23,
                "column": 1,
                "offset": 1078
              },
              "end": {
                "line": 23,
                "column": 115,
                "offset": 1192
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 15,
            "column": 1,
            "offset": 285
          },
          "end": {
            "line": 23,
            "column": 115,
            "offset": 1192
          },
          "indent": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
          ]
        }
      },
      {
        "type": "definition",
        "identifier": "1",
        "title": null,
        "url": "https://developer.mozilla.org/docs/Web/API/Element",
        "position": {
          "start": {
            "line": 25,
            "column": 1,
            "offset": 1194
          },
          "end": {
            "line": 25,
            "column": 56,
            "offset": 1249
          },
          "indent": []
        }
      }
    ],
    "position": {
      "start": {
        "line": 1,
        "column": 1,
        "offset": 0
      },
      "end": {
        "line": 25,
        "column": 56,
        "offset": 1249
      }
    }
  },
  "tags": [
    {
      "title": "class",
      "description": null,
      "lineNumber": 27,
      "type": null,
      "name": null
    },
    {
      "title": "param",
      "description": "Instance options",
      "lineNumber": 28,
      "type": {
        "type": "OptionalType",
        "expression": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      "name": "options",
      "default": "{}"
    },
    {
      "title": "example",
      "description": "",
      "lineNumber": 29
    },
    {
      "title": "returns",
      "description": null,
      "lineNumber": 30,
      "type": {
        "type": "NameExpression",
        "name": "Component"
      }
    }
  ],
  "loc": {
    "start": {
      "line": 4,
      "column": 0
    },
    "end": {
      "line": 35,
      "column": 3
    }
  },
  "context": {
    "loc": {
      "start": {
        "line": 36,
        "column": 0
      },
      "end": {
        "line": 600,
        "column": 1
      }
    },
    "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
    "sortKey": "undefined 00000036"
  },
  "augments": [],
  "errors": [
    {
      "message": "@example without code",
      "commentLineNumber": 29
    }
  ],
  "examples": [],
  "params": [
    {
      "title": "param",
      "name": "options",
      "lineNumber": 28,
      "description": {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "Instance options",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 17,
                    "offset": 16
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 17,
                "offset": 16
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 17,
            "offset": 16
          }
        }
      },
      "type": {
        "type": "NameExpression",
        "name": "object"
      },
      "default": "{}"
    }
  ],
  "properties": [],
  "returns": [
    {
      "description": {
        "type": "root",
        "children": [],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 1,
            "offset": 0
          }
        }
      },
      "title": "returns",
      "type": {
        "type": "NameExpression",
        "name": "Component"
      }
    }
  ],
  "sees": [],
  "throws": [],
  "todos": [],
  "kind": "class",
  "constructorComment": {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Component constructor",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 22,
          "offset": 21
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 52,
        "column": 4
      },
      "end": {
        "line": 54,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 5
        }
      },
      "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
      "sortKey": "undefined 00000055",
      "code": "{\n    /**\n     * ```js\n     * this.readyState(state, prevState)\n     * ```\n     * Optional method used to delay the execution of [`ready`](#ready) after the state satisfies to a given condition.\n     *\n     * Will be executed at every state change until it returns `true`.\n     *\n     * @name readyState\n     * @public\n     * @type {function}\n     * @param {object} state The current state\n     * @param {object} prevState The previous state\n     * @returns {boolean}\n     */\n    /**\n     * Component constructor\n     */\n    constructor(options = {}) {\n        const defaultOptionsFn = this.constructor\n            .defaultOptions;\n        const defaultOptions = typeof defaultOptionsFn === 'function'\n            ? defaultOptionsFn.call(this, this)\n            : {};\n        this.state = {};\n        this.options = Object.entries(defaultOptions).reduce((opts, [key, value]) => {\n            let v = options[key] !== undefined ? options[key] : value;\n            if (typeof v === 'function' && !Component.isComponent(v)) {\n                v = v.bind(this);\n            }\n            opts[key] = v; // eslint-disable-line no-param-reassign\n            return opts;\n        }, {});\n        Object.assign(this, dush());\n        this.$active = false;\n        // DOM references\n        this.$els = {};\n        // sub components references\n        this.$refs = {};\n        this.$refsStore = new Map();\n        this.$listeners = new Map();\n        this.created();\n    }\n    /**\n     * ```js\n     * Component.isComponent(obj)\n     * ```\n     *\n     * Checks whether the passed-in value is a Component constructor\n     *\n     * @static\n     * @param {*} value\n     * @returns {boolean}\n     */\n    static isComponent(value) {\n        if (!value || !value.defaultOptions) {\n            return false;\n        }\n        return typeof value.defaultOptions === 'function';\n    }\n    /**\n     * ```js\n     * mount(el, [state])\n     * ```\n     *\n     * Mounts a component's instance on a DOM element and initializes it.\n     * To prevent this second behavior set `state` to `null`\n     *\n     * Lifecycle stage: `mount`\n     *\n     * Lifecycle hooks:\n     *\n     * - `beforeMount` just after attaching the root element (this.$el) but before any listener and selector registration\n     * - `initialize` (if `state` !== null)\n     * - `ready` (if `state` !== null)\n     * - `mounted`\n     *\n     * @param {string|Element} el Component's root element\n     * @param {object|null} [state={}] initial state\n     * @returns {Component}\n     */\n    mount(el, state = {}) {\n        if (this.$el) {\n            throw new Error('Component is already mounted');\n        }\n        const $el = typeof el === 'string' ? qs(el) : el;\n        if (!isElement($el)) {\n            // fail silently (kinda...);\n            console.warn('Element is not a DOM element', $el); // tslint:disable-line no-console\n            return this;\n        }\n        this.$el = $el; // eslint-disable-line no-multi-assign\n        this.beforeMount();\n        if (this.selectors) {\n            Object.entries(this.selectors).forEach(([key, selector]) => {\n                this.$els[key] = qs(selector, this.$el);\n            });\n        }\n        if (this.listeners) {\n            Object.entries(this.listeners).forEach(([def, handler]) => {\n                this.setListener(def, bindMethod(this, handler));\n            });\n        }\n        if (state) {\n            this.init(state);\n        }\n        this.mounted();\n        return this;\n    }\n    /**\n     * ```js\n     * init([state])\n     * ```\n     * Initializes the component instance\n     *\n     * **Lifecycle stage**: `init`\n     *\n     * **Lifecycle hooks:**\n     *\n     * - `initialize` (if `state` !== null)\n     * - `ready` (if `state` !== null)\n     *\n     * @param {object|null} [state={}] initial state\n     * @returns {Component}\n     */\n    init(state = {}) {\n        if (!isElement(this.$el)) {\n            throw new Error('component instance not mounted');\n        }\n        const { $el } = this;\n        // initialization placeholder\n        let uid = $el.getAttribute(Component.UID_DATA_ATTR);\n        if (uid) {\n            console.warn(`Element ${uid} is already initialized... skipping`, $el); // tslint:disable-line no-console\n            this.$uid = uid;\n            return this;\n        }\n        uid = nextUid();\n        this.$uid = uid;\n        $el.setAttribute(Component.UID_DATA_ATTR, uid);\n        if (!$el.id) {\n            $el.id = `c_${uid}`;\n        }\n        this.initialize();\n        if (this.actions) {\n            Object.entries(this.actions).forEach(([key, method]) => {\n                this.on(`change:${key}`, bindMethod(this, method));\n            });\n        }\n        const initialState = Object.assign(this.state, state);\n        this.replaceState(initialState);\n        this.$active = true;\n        if (this.readyState) {\n            // is it a promise ?\n            const watcher = (current, prev) => {\n                if (this.readyState(current, prev)) {\n                    this.off('change:*', watcher);\n                    this.ready();\n                }\n            };\n            this.on('change:*', watcher);\n            return this;\n        }\n        this.ready();\n        return this;\n    }\n    /**\n     * Lifecycle hook called on instance creation\n     */\n    created() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called just before mounting the instance onto the root element\n     */\n    beforeMount() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called when the instance gets mounted onto a DOM element\n     */\n    mounted() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called before instance initialization.\n     */\n    initialize() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called after instance initialization. State and event binding are already in place\n     */\n    ready() { } // tslint:disable-line: no-empty\n    /**\n     * Lifecycle hook called just before closing child refs\n     */\n    beforeDestroy() { } // tslint:disable-line: no-empty\n    /**\n     * ```js\n     * getState(key)\n     * ```\n     *\n     * Returns a state property\n     *\n     * @param {string} key State property to return\n     * @returns {*}\n     * @example\n     * const instance = new Component().mount('#app', { a: 1 });\n     * // instance.getState('a') === 1\n     */\n    getState(key) {\n        return this.state[key];\n    }\n    /* eslint-disable class-methods-use-this */\n    /**\n     * ```js\n     * shouldUpdateState(string, currentValue, newValue)\n     * ```\n     * Executes a strict inequality comparison (`!==`) on the passed-in values and returns the result.\n     * This method is executed on `setState` calls.\n     *\n     * You can overwrite this method with your own validation logic.\n     *\n     * @param {string} key State property name\n     * @param {*} currentValue value stored in the current state\n     * @param {*} newValue New value\n     * @returns {boolean}\n     */\n    shouldUpdateState(key, currentValue, newValue) {\n        return currentValue !== newValue;\n    }\n    /* eslint-enable class-methods-use-this */\n    /**\n     * ```js\n     * setState(updater, [silent])\n     * ```\n     *\n     * Sets internal state property(ies). Creates a shallow copy of the current state.\n     * If the computed new state is different from the old one it emits a `change:<property>` event for every changed property\n     * as well as a `change:*` event\n     *\n     * To prevent this behavior set the second argument to `true` (silent update)\n     *\n     * If the new value argument is a function, it will be executed with the current state as argument.\n     * The returned value will be used to update the state.\n     *\n     * @param {object|function} updater Defines which part of the state must be updated.\n     * @param {boolean} [silent=false] Update the state without emitting change events\n     * @example\n     * instance.on('change:a', (next, prev) => console.log(next, prev));\n     * instance.setState({ a: 1 }); //emits 'change:a' -> logs undefined,1\n     *\n     * instance.setState({ a: 1 }); //nothing happens\n     * instance.setState({ a: 2 }, true); //nothing happens, again...\n     *\n     * // use the current state to calculate its next value\n     * instance.setState(({ a }) => ({a + 1}));\n     */\n    setState(updater, silent = false) {\n        const changed = [];\n        const { state: prevState } = this;\n        const changeSet = evaluate(updater, this.state);\n        this.state = Object.entries(this.state).reduce((newState, [k, prevValue]) => {\n            const value = changeSet[k];\n            if (value === undefined ||\n                this.shouldUpdateState(k, prevValue, value) === false) {\n                newState[k] = prevValue; // eslint-disable-line no-param-reassign\n            }\n            else {\n                changed.push(k);\n                newState[k] = value; // eslint-disable-line no-param-reassign\n            }\n            return newState;\n        }, {});\n        if (!silent && changed.length > 0) {\n            while (changed.length !== 0) {\n                const k = changed.pop();\n                this.emit(`change:${k}`, this.state[k], prevState[k]);\n            }\n            this.emit('change:*', this.state, prevState);\n        }\n    }\n    /**\n     * ```js\n     * replaceState(newState, [silent])\n     * ```\n     *\n     * Replaces the current state of the instance with a completely new state\n     *\n     * @param {object} newState The new state object.\n     * @param {boolean} [silent=false] Replace the state without emitting change events\n     * @example\n     * instance.replaceState({ a: 1 });\n     * // instance.state.a === 1\n     * instance.replaceState({ b: 2 });\n     * // instance.state.b === 2\n     * // instance.state.a === undefined\n     */\n    replaceState(newState, silent = false) {\n        const { state: prevState } = this;\n        this.state = Object.assign({}, newState);\n        Object.entries(this.state).forEach(([key, value]) => {\n            if (!silent) {\n                this.emit(`change:${key}`, value, prevState[key]);\n            }\n        });\n        if (!silent) {\n            this.emit('change:*', this.state, prevState);\n        }\n    }\n    /**\n     * ```js\n     * broadcast(event, [...params])\n     * ```\n     *\n     * Emits a `broadcast:<eventname>` event to every child component listed as a `$ref`\n     *\n     * @param {string} event Event name\n     * @param {*[]} [params] Additional arguments to pass to the handler\n     * @example\n     * const child = new Component('#child');\n     * child.on('broadcast:log', (str) => console.log(str));\n     *\n     * instance.setRef({ id: 'child', component: child });\n     * instance.broadcast('log', 'test') // child component logs 'test'\n     */\n    broadcast(event, ...params) {\n        this.$refsStore.forEach((instance) => {\n            instance.emit(`broadcast:${event}`, ...params);\n        });\n    }\n    /**\n     * ```js\n     * setListener(string, handler)\n     * ```\n     *\n     * Sets a DOM event listener.\n     *\n     * The first argument must be a string composed by an event name (ie `click`) and a CSS selector (`.element`)\n     * separated by a space.\n     *\n     * If the CSS selector starts with `@` the listener will be attached the the\n     * corresponding reference element in the instance (`this.$els.<element>`), if any.\n     *\n     * @param {string} def Event and target element definition. Format `eventName [target]`\n     * @param {function} handler Event handler\n     * @example\n     *\n     * // attach a click handler to a child element\n     * instance.setListener('click .button', () => ...)\n     *\n     * // attach a click handler to this.$els.btn\n     * instance.setListener('click @btn', () => ...)\n     *\n     * // attach a click handler to this.$el\n     * instance.setListener('click', () => ...)\n     */\n    setListener(def, handler) {\n        let event;\n        let selector;\n        const match = def && def.match(LISTENER_REGEXP);\n        if (match) {\n            const $el = this.$el;\n            [, event, selector = $el] = match;\n            let element;\n            if (typeof selector === 'string') {\n                element = selector.startsWith('@')\n                    ? this.$els[selector.slice(1)]\n                    : qs(selector, $el);\n            }\n            else {\n                element = selector;\n            }\n            if (element) {\n                element.addEventListener(event, handler);\n                this.$listeners.set(handler, { event, element });\n            }\n        }\n    }\n    /**\n     * ```js\n     * removeListeners()\n     * ```\n     *\n     * Removes all DOM event listeners attached with `.setListener`.\n     *\n     */\n    removeListeners() {\n        this.$listeners.forEach(({ event, element }, handler) => {\n            element.removeEventListener(event, handler);\n        });\n        this.$listeners.clear();\n    }\n    /**\n     * ```js\n     * setRef(config, [props])\n     * ```\n     *\n     * Attaches a reference to a child component.\n     *\n     * If a reference `id` is already attached, the previous one is destroyed and replaced with the new one\n     *\n     * @param {object} config A child component configuration object\n     * @param {string} config.id Reference id. Will be used to set a reference to the child component onto `this.$refs`\n     * @param {component} config.component Component constructor or component instance\n     * @param {string|HTMLElement} config.el Child component root element. Ignored if `config.component` is a component instance\n     * @param {Object} config.on Child component event listeners. Format `{ 'eventname': handler }`\n     * @param {*} config.* Any other property listed here will be passed to the constructor as option\n     * @param {object} [props] Child component initial state.\n     * @returns {Promise}\n     * @example\n     * const parent = new Component('#root');\n     *\n     * class ChildComponent extends Component {}\n     *\n     * // as constructor\n     * parent.setRef({\n     *   id: 'child',\n     *   component: ChildComponent,\n     *   el: '#child',\n     *   // other options here...\n     * });\n     *\n     * // as instance\n     * parent.setRef({\n     *   id: 'child',\n     *   component: new ChildComponent({ ... }).mount('#child', null) // <-- prevent component init\n     * });\n     *\n     * // sync parent - child state\n     * // updates child `parentCount` state whenever `parent.state.count` changes\n     * parent.setRef({\n     *   id: 'child',\n     *   component: ChildComponent,\n     *   el: '#child',\n     *   // other options here...\n     * }, {\n     *   parentCount: (parentState) => parentState.count\n     * });\n     */\n    async setRef(refCfg, props) {\n        let ref;\n        if (!isPlainObject(refCfg)) {\n            throw new TypeError('Invalid reference configuration');\n        }\n        const { component: ChildComponent, el, id, on, ...options } = refCfg;\n        if (Component.isComponent(ChildComponent) && el) {\n            ref = new ChildComponent(options);\n        }\n        else if (ChildComponent instanceof Component) {\n            ref = ChildComponent;\n        }\n        else if (typeof ChildComponent === 'function' && el) {\n            ref = ChildComponent(el, this.state);\n        }\n        else {\n            throw new TypeError('Invalid reference configuration');\n        }\n        // $context gets propagated to every child component\n        // this way we can use `connect`-ed components as reference\n        if (this.$context) {\n            Object.defineProperty(ref, '$context', {\n                enumerable: false,\n                get: () => this.$context,\n            });\n        }\n        if (!id) {\n            throw new Error('Invalid reference id string');\n        }\n        // bind events...\n        if (on) {\n            Object.entries(on).forEach(([name, handler]) => {\n                ref.on(name, handler);\n            });\n        }\n        const { $refs } = this;\n        const prevRef = $refs[id];\n        const refState = {};\n        $refs[id] = ref;\n        this.$refsStore.set(id, ref);\n        if (!ref.$el && el) {\n            ref.mount(el, null);\n        }\n        if (props) {\n            Object.entries(props).forEach(([name, value]) => {\n                if (typeof value === 'function') {\n                    let key = name;\n                    let src = '*';\n                    if (name.includes('>')) {\n                        [src = '*', key] = name.split('>');\n                    }\n                    refState[key] = value(src !== '*' ? this.state[src] : this.state, ref);\n                    this.on(`change:${src}`, (state) => {\n                        ref.setState({ [key]: value(state, ref) });\n                    });\n                }\n                else {\n                    refState[name] = value;\n                }\n            });\n        }\n        const { $el } = this;\n        if (prevRef) {\n            await prevRef.destroy();\n            if (prevRef.$el &&\n                $el.contains(prevRef.$el) &&\n                prevRef.$el.parentElement &&\n                ref.$el) {\n                prevRef.$el.parentElement.replaceChild(ref.$el, prevRef.$el);\n            }\n            else if (ref.$el && !$el.contains(ref.$el)) {\n                $el.appendChild(ref.$el);\n            }\n            return ref.init(refState);\n        }\n        if (ref.$el && !$el.contains(ref.$el)) {\n            $el.appendChild(ref.$el);\n        }\n        return ref.init(refState);\n    }\n    /**\n     * Calls `.destroy()` on every child references and detaches them from the parent component.\n     *\n     * @returns {Promise}\n     */\n    async closeRefs() {\n        const { $refsStore } = this;\n        try {\n            const result = await Promise.all([...$refsStore.values()].map((ref) => ref.destroy()));\n            this.$refs = {};\n            $refsStore.clear();\n            return result;\n        }\n        catch (e) {\n            console.error('close refs', e); // tslint:disable-line no-console\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * ```js\n     * destroy()\n     * ```\n     *\n     * Detaches DOM events, instance's events and destroys all references as well\n     *\n     * Lifecycle stage: `destoy`\n     *\n     * Lifecycle hooks:\n     *\n     * - `beforeDestroy`\n     *\n     * @returns {Promise}\n     */\n    async destroy() {\n        await this.beforeDestroy();\n        this.removeListeners();\n        this.off();\n        if (this.$el) {\n            this.$el.removeAttribute(Component.UID_DATA_ATTR); // eslint-disable-line no-console\n        }\n        try {\n            await this.closeRefs();\n            this.$active = false;\n            return Promise.resolve();\n        }\n        catch (e) {\n            console.error('destroy catch: ', e); // tslint:disable-line no-console\n            return Promise.reject(e);\n        }\n    }\n}"
    },
    "augments": [],
    "errors": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": []
  },
  "name": "Component",
  "members": {
    "global": [],
    "inner": [],
    "instance": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "mount(el, [state])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 28
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Mounts a component's instance on a DOM element and initializes it.\nTo prevent this second behavior set ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 30
                    },
                    "end": {
                      "line": 6,
                      "column": 37,
                      "offset": 133
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "state",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 37,
                      "offset": 133
                    },
                    "end": {
                      "line": 6,
                      "column": 44,
                      "offset": 140
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " to ",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 44,
                      "offset": 140
                    },
                    "end": {
                      "line": 6,
                      "column": 48,
                      "offset": 144
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 48,
                      "offset": 144
                    },
                    "end": {
                      "line": 6,
                      "column": 54,
                      "offset": 150
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 30
                },
                "end": {
                  "line": 6,
                  "column": 54,
                  "offset": 150
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle stage: ",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 1,
                      "offset": 152
                    },
                    "end": {
                      "line": 8,
                      "column": 18,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "mount",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 18,
                      "offset": 169
                    },
                    "end": {
                      "line": 8,
                      "column": 25,
                      "offset": 176
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 152
                },
                "end": {
                  "line": 8,
                  "column": 25,
                  "offset": 176
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hooks:",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 1,
                      "offset": 178
                    },
                    "end": {
                      "line": 10,
                      "column": 17,
                      "offset": 194
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 178
                },
                "end": {
                  "line": 10,
                  "column": 17,
                  "offset": 194
                },
                "indent": []
              }
            },
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "beforeMount",
                          "position": {
                            "start": {
                              "line": 12,
                              "column": 3,
                              "offset": 198
                            },
                            "end": {
                              "line": 12,
                              "column": 16,
                              "offset": 211
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " just after attaching the root element (this.$el) but before any listener and selector registration",
                          "position": {
                            "start": {
                              "line": 12,
                              "column": 16,
                              "offset": 211
                            },
                            "end": {
                              "line": 12,
                              "column": 115,
                              "offset": 310
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 3,
                          "offset": 198
                        },
                        "end": {
                          "line": 12,
                          "column": 115,
                          "offset": 310
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 1,
                      "offset": 196
                    },
                    "end": {
                      "line": 12,
                      "column": 115,
                      "offset": 310
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "initialize",
                          "position": {
                            "start": {
                              "line": 13,
                              "column": 3,
                              "offset": 313
                            },
                            "end": {
                              "line": 13,
                              "column": 15,
                              "offset": 325
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " (if ",
                          "position": {
                            "start": {
                              "line": 13,
                              "column": 15,
                              "offset": 325
                            },
                            "end": {
                              "line": 13,
                              "column": 20,
                              "offset": 330
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "state",
                          "position": {
                            "start": {
                              "line": 13,
                              "column": 20,
                              "offset": 330
                            },
                            "end": {
                              "line": 13,
                              "column": 27,
                              "offset": 337
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " !== null)",
                          "position": {
                            "start": {
                              "line": 13,
                              "column": 27,
                              "offset": 337
                            },
                            "end": {
                              "line": 13,
                              "column": 37,
                              "offset": 347
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 13,
                          "column": 3,
                          "offset": 313
                        },
                        "end": {
                          "line": 13,
                          "column": 37,
                          "offset": 347
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 1,
                      "offset": 311
                    },
                    "end": {
                      "line": 13,
                      "column": 37,
                      "offset": 347
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "ready",
                          "position": {
                            "start": {
                              "line": 14,
                              "column": 3,
                              "offset": 350
                            },
                            "end": {
                              "line": 14,
                              "column": 10,
                              "offset": 357
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " (if ",
                          "position": {
                            "start": {
                              "line": 14,
                              "column": 10,
                              "offset": 357
                            },
                            "end": {
                              "line": 14,
                              "column": 15,
                              "offset": 362
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "state",
                          "position": {
                            "start": {
                              "line": 14,
                              "column": 15,
                              "offset": 362
                            },
                            "end": {
                              "line": 14,
                              "column": 22,
                              "offset": 369
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " !== null)",
                          "position": {
                            "start": {
                              "line": 14,
                              "column": 22,
                              "offset": 369
                            },
                            "end": {
                              "line": 14,
                              "column": 32,
                              "offset": 379
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 14,
                          "column": 3,
                          "offset": 350
                        },
                        "end": {
                          "line": 14,
                          "column": 32,
                          "offset": 379
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 14,
                      "column": 1,
                      "offset": 348
                    },
                    "end": {
                      "line": 14,
                      "column": 32,
                      "offset": 379
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "mounted",
                          "position": {
                            "start": {
                              "line": 15,
                              "column": 3,
                              "offset": 382
                            },
                            "end": {
                              "line": 15,
                              "column": 12,
                              "offset": 391
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 15,
                          "column": 3,
                          "offset": 382
                        },
                        "end": {
                          "line": 15,
                          "column": 12,
                          "offset": 391
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 15,
                      "column": 1,
                      "offset": 380
                    },
                    "end": {
                      "line": 15,
                      "column": 12,
                      "offset": 391
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 12,
                  "column": 1,
                  "offset": 196
                },
                "end": {
                  "line": 15,
                  "column": 12,
                  "offset": 391
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 15,
              "column": 12,
              "offset": 391
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Component's root element",
            "lineNumber": 17,
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "string"
                },
                {
                  "type": "NameExpression",
                  "name": "Element"
                }
              ]
            },
            "name": "el"
          },
          {
            "title": "param",
            "description": "initial state",
            "lineNumber": 18,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NullLiteral"
                  }
                ]
              }
            },
            "name": "state",
            "default": "{}"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 19,
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 97,
            "column": 4
          },
          "end": {
            "line": 117,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000118"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "el",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Component's root element",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 25,
                          "offset": 24
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "string"
                },
                {
                  "type": "NameExpression",
                  "name": "Element"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "state",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "initial state",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            "default": "{}"
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "mount",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "mount",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#mount"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "init([state])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 23
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initializes the component instance",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 24
                    },
                    "end": {
                      "line": 4,
                      "column": 35,
                      "offset": 58
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 24
                },
                "end": {
                  "line": 4,
                  "column": 35,
                  "offset": 58
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Lifecycle stage",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 62
                        },
                        "end": {
                          "line": 6,
                          "column": 18,
                          "offset": 77
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 1,
                      "offset": 60
                    },
                    "end": {
                      "line": 6,
                      "column": 20,
                      "offset": 79
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 20,
                      "offset": 79
                    },
                    "end": {
                      "line": 6,
                      "column": 22,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "init",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 22,
                      "offset": 81
                    },
                    "end": {
                      "line": 6,
                      "column": 28,
                      "offset": 87
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 60
                },
                "end": {
                  "line": 6,
                  "column": 28,
                  "offset": 87
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "strong",
                  "children": [
                    {
                      "type": "text",
                      "value": "Lifecycle hooks:",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 3,
                          "offset": 91
                        },
                        "end": {
                          "line": 8,
                          "column": 19,
                          "offset": 107
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 1,
                      "offset": 89
                    },
                    "end": {
                      "line": 8,
                      "column": 21,
                      "offset": 109
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 89
                },
                "end": {
                  "line": 8,
                  "column": 21,
                  "offset": 109
                },
                "indent": []
              }
            },
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "initialize",
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 3,
                              "offset": 113
                            },
                            "end": {
                              "line": 10,
                              "column": 15,
                              "offset": 125
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " (if ",
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 15,
                              "offset": 125
                            },
                            "end": {
                              "line": 10,
                              "column": 20,
                              "offset": 130
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "state",
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 20,
                              "offset": 130
                            },
                            "end": {
                              "line": 10,
                              "column": 27,
                              "offset": 137
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " !== null)",
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 27,
                              "offset": 137
                            },
                            "end": {
                              "line": 10,
                              "column": 37,
                              "offset": 147
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 3,
                          "offset": 113
                        },
                        "end": {
                          "line": 10,
                          "column": 37,
                          "offset": 147
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 1,
                      "offset": 111
                    },
                    "end": {
                      "line": 10,
                      "column": 37,
                      "offset": 147
                    },
                    "indent": []
                  }
                },
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "ready",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 3,
                              "offset": 150
                            },
                            "end": {
                              "line": 11,
                              "column": 10,
                              "offset": 157
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " (if ",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 10,
                              "offset": 157
                            },
                            "end": {
                              "line": 11,
                              "column": 15,
                              "offset": 162
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "state",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 15,
                              "offset": 162
                            },
                            "end": {
                              "line": 11,
                              "column": 22,
                              "offset": 169
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " !== null)",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 22,
                              "offset": 169
                            },
                            "end": {
                              "line": 11,
                              "column": 32,
                              "offset": 179
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 150
                        },
                        "end": {
                          "line": 11,
                          "column": 32,
                          "offset": 179
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 1,
                      "offset": 148
                    },
                    "end": {
                      "line": 11,
                      "column": 32,
                      "offset": 179
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 111
                },
                "end": {
                  "line": 11,
                  "column": 32,
                  "offset": 179
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 11,
              "column": 32,
              "offset": 179
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "initial state",
            "lineNumber": 13,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NullLiteral"
                  }
                ]
              }
            },
            "name": "state",
            "default": "{}"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 14,
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 146,
            "column": 4
          },
          "end": {
            "line": 161,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 162,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000162"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "state",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "initial state",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            "default": "{}"
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Component"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "init",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "init",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#init"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called on instance creation",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 203,
            "column": 4
          },
          "end": {
            "line": 205,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 17
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000206"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "created",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "created",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#created"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called just before mounting the instance onto the root element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 78,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 78,
              "offset": 77
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 207,
            "column": 4
          },
          "end": {
            "line": 209,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 21
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000210"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "beforeMount",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "beforeMount",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#beforeMount"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called when the instance gets mounted onto a DOM element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 72,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 72,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 211,
            "column": 4
          },
          "end": {
            "line": 213,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 17
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000214"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "mounted",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "mounted",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#mounted"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called before instance initialization.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 215,
            "column": 4
          },
          "end": {
            "line": 217,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 218,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 20
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000218"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "initialize",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "initialize",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#initialize"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called after instance initialization. State and event binding are already in place",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 98,
                      "offset": 97
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 98,
                  "offset": 97
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 98,
              "offset": 97
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 219,
            "column": 4
          },
          "end": {
            "line": 221,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 222,
              "column": 15
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000222"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "ready",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "ready",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#ready"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hook called just before closing child refs",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 223,
            "column": 4
          },
          "end": {
            "line": 225,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 23
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000226"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "beforeDestroy",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "beforeDestroy",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#beforeDestroy"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "getState(key)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 23
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns a state property",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 25
                    },
                    "end": {
                      "line": 5,
                      "column": 25,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 25
                },
                "end": {
                  "line": 5,
                  "column": 25,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 25,
              "offset": 49
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "State property to return",
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "key"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 8,
            "type": {
              "type": "AllLiteral"
            }
          },
          {
            "title": "example",
            "description": "const instance = new Component().mount('#app', { a: 1 });\n// instance.getState('a') === 1",
            "lineNumber": 9
          }
        ],
        "loc": {
          "start": {
            "line": 227,
            "column": 4
          },
          "end": {
            "line": 239,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000240"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "const instance = new Component().mount('#app', { a: 1 });\n// instance.getState('a') === 1"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "key",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "State property to return",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 25,
                          "offset": 24
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "AllLiteral"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "getState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "getState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#getState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "shouldUpdateState(string, currentValue, newValue)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 59
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Executes a strict inequality comparison (",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 60
                    },
                    "end": {
                      "line": 4,
                      "column": 42,
                      "offset": 101
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "!==",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 42,
                      "offset": 101
                    },
                    "end": {
                      "line": 4,
                      "column": 47,
                      "offset": 106
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") on the passed-in values and returns the result.\nThis method is executed on ",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 47,
                      "offset": 106
                    },
                    "end": {
                      "line": 5,
                      "column": 28,
                      "offset": 183
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "setState",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 28,
                      "offset": 183
                    },
                    "end": {
                      "line": 5,
                      "column": 38,
                      "offset": 193
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calls.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 38,
                      "offset": 193
                    },
                    "end": {
                      "line": 5,
                      "column": 45,
                      "offset": 200
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 60
                },
                "end": {
                  "line": 5,
                  "column": 45,
                  "offset": 200
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "You can overwrite this method with your own validation logic.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 202
                    },
                    "end": {
                      "line": 7,
                      "column": 62,
                      "offset": 263
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 202
                },
                "end": {
                  "line": 7,
                  "column": 62,
                  "offset": 263
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 62,
              "offset": 263
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "State property name",
            "lineNumber": 9,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "key"
          },
          {
            "title": "param",
            "description": "value stored in the current state",
            "lineNumber": 10,
            "type": {
              "type": "AllLiteral"
            },
            "name": "currentValue"
          },
          {
            "title": "param",
            "description": "New value",
            "lineNumber": 11,
            "type": {
              "type": "AllLiteral"
            },
            "name": "newValue"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 12,
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 244,
            "column": 4
          },
          "end": {
            "line": 257,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000258"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "key",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "State property name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 20,
                          "offset": 19
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "currentValue",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "value stored in the current state",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 34,
                          "offset": 33
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                }
              }
            },
            "type": {
              "type": "AllLiteral"
            }
          },
          {
            "title": "param",
            "name": "newValue",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "New value",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 10,
                          "offset": 9
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                }
              }
            },
            "type": {
              "type": "AllLiteral"
            }
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "shouldUpdateState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "shouldUpdateState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#shouldUpdateState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "setState(updater, [silent])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 37
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets internal state property(ies). Creates a shallow copy of the current state.\nIf the computed new state is different from the old one it emits a ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 39
                    },
                    "end": {
                      "line": 6,
                      "column": 68,
                      "offset": 186
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "change:<property>",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 68,
                      "offset": 186
                    },
                    "end": {
                      "line": 6,
                      "column": 87,
                      "offset": 205
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " event for every changed property\nas well as a ",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 87,
                      "offset": 205
                    },
                    "end": {
                      "line": 7,
                      "column": 14,
                      "offset": 252
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "change:*",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 14,
                      "offset": 252
                    },
                    "end": {
                      "line": 7,
                      "column": 24,
                      "offset": 262
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " event",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 24,
                      "offset": 262
                    },
                    "end": {
                      "line": 7,
                      "column": 30,
                      "offset": 268
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 39
                },
                "end": {
                  "line": 7,
                  "column": 30,
                  "offset": 268
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "To prevent this behavior set the second argument to ",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 1,
                      "offset": 270
                    },
                    "end": {
                      "line": 9,
                      "column": 53,
                      "offset": 322
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 53,
                      "offset": 322
                    },
                    "end": {
                      "line": 9,
                      "column": 59,
                      "offset": 328
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " (silent update)",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 59,
                      "offset": 328
                    },
                    "end": {
                      "line": 9,
                      "column": 75,
                      "offset": 344
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 270
                },
                "end": {
                  "line": 9,
                  "column": 75,
                  "offset": 344
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If the new value argument is a function, it will be executed with the current state as argument.\nThe returned value will be used to update the state.",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 1,
                      "offset": 346
                    },
                    "end": {
                      "line": 12,
                      "column": 53,
                      "offset": 495
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 346
                },
                "end": {
                  "line": 12,
                  "column": 53,
                  "offset": 495
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 12,
              "column": 53,
              "offset": 495
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Defines which part of the state must be updated.",
            "lineNumber": 14,
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NameExpression",
                  "name": "function"
                }
              ]
            },
            "name": "updater"
          },
          {
            "title": "param",
            "description": "Update the state without emitting change events",
            "lineNumber": 15,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            "name": "silent",
            "default": "false"
          },
          {
            "title": "example",
            "description": "instance.on('change:a', (next, prev) => console.log(next, prev));\ninstance.setState({ a: 1 }); //emits 'change:a' -> logs undefined,1\n\ninstance.setState({ a: 1 }); //nothing happens\ninstance.setState({ a: 2 }, true); //nothing happens, again...\n\n// use the current state to calculate its next value\ninstance.setState(({ a }) => ({a + 1}));",
            "lineNumber": 16
          }
        ],
        "loc": {
          "start": {
            "line": 262,
            "column": 4
          },
          "end": {
            "line": 287,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 288,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000288"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "instance.on('change:a', (next, prev) => console.log(next, prev));\ninstance.setState({ a: 1 }); //emits 'change:a' -> logs undefined,1\n\ninstance.setState({ a: 1 }); //nothing happens\ninstance.setState({ a: 2 }, true); //nothing happens, again...\n\n// use the current state to calculate its next value\ninstance.setState(({ a }) => ({a + 1}));"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "updater",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines which part of the state must be updated.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 49,
                          "offset": 48
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                }
              }
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "object"
                },
                {
                  "type": "NameExpression",
                  "name": "function"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "silent",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Update the state without emitting change events",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 48,
                          "offset": 47
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "setState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "setState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#setState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "replaceState(newState, [silent])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 42
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Replaces the current state of the instance with a completely new state",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 44
                    },
                    "end": {
                      "line": 5,
                      "column": 71,
                      "offset": 114
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 44
                },
                "end": {
                  "line": 5,
                  "column": 71,
                  "offset": 114
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 71,
              "offset": 114
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "The new state object.",
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "newState"
          },
          {
            "title": "param",
            "description": "Replace the state without emitting change events",
            "lineNumber": 8,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            "name": "silent",
            "default": "false"
          },
          {
            "title": "example",
            "description": "instance.replaceState({ a: 1 });\n// instance.state.a === 1\ninstance.replaceState({ b: 2 });\n// instance.state.b === 2\n// instance.state.a === undefined",
            "lineNumber": 9
          }
        ],
        "loc": {
          "start": {
            "line": 312,
            "column": 4
          },
          "end": {
            "line": 327,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 328,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000328"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "instance.replaceState({ a: 1 });\n// instance.state.a === 1\ninstance.replaceState({ b: 2 });\n// instance.state.b === 2\n// instance.state.a === undefined"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "newState",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The new state object.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 22,
                          "offset": 21
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          },
          {
            "title": "param",
            "name": "silent",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Replace the state without emitting change events",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 49,
                          "offset": 48
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "replaceState",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "replaceState",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#replaceState"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "broadcast(event, [...params])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 39
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Emits a ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 41
                    },
                    "end": {
                      "line": 5,
                      "column": 9,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "broadcast:<eventname>",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 9,
                      "offset": 49
                    },
                    "end": {
                      "line": 5,
                      "column": 32,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " event to every child component listed as a ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 32,
                      "offset": 72
                    },
                    "end": {
                      "line": 5,
                      "column": 76,
                      "offset": 116
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "$ref",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 76,
                      "offset": 116
                    },
                    "end": {
                      "line": 5,
                      "column": 82,
                      "offset": 122
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 41
                },
                "end": {
                  "line": 5,
                  "column": 82,
                  "offset": 122
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 82,
              "offset": 122
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Event name",
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "event"
          },
          {
            "title": "param",
            "description": "Additional arguments to pass to the handler",
            "lineNumber": 8,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "AllLiteral"
                  }
                ]
              }
            },
            "name": "params"
          },
          {
            "title": "example",
            "description": "const child = new Component('#child');\nchild.on('broadcast:log', (str) => console.log(str));\n\ninstance.setRef({ id: 'child', component: child });\ninstance.broadcast('log', 'test') // child component logs 'test'",
            "lineNumber": 9
          }
        ],
        "loc": {
          "start": {
            "line": 340,
            "column": 4
          },
          "end": {
            "line": 355,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000356"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "const child = new Component('#child');\nchild.on('broadcast:log', (str) => console.log(str));\n\ninstance.setRef({ id: 'child', component: child });\ninstance.broadcast('log', 'test') // child component logs 'test'"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "event",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Event name",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "params",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional arguments to pass to the handler",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 44,
                          "offset": 43
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "AllLiteral"
                  }
                ]
              }
            }
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "broadcast",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "broadcast",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#broadcast"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "setListener(string, handler)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 38
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sets a DOM event listener.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 40
                    },
                    "end": {
                      "line": 5,
                      "column": 27,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 40
                },
                "end": {
                  "line": 5,
                  "column": 27,
                  "offset": 66
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The first argument must be a string composed by an event name (ie ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 68
                    },
                    "end": {
                      "line": 7,
                      "column": 67,
                      "offset": 134
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "click",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 67,
                      "offset": 134
                    },
                    "end": {
                      "line": 7,
                      "column": 74,
                      "offset": 141
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") and a CSS selector (",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 74,
                      "offset": 141
                    },
                    "end": {
                      "line": 7,
                      "column": 96,
                      "offset": 163
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": ".element",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 96,
                      "offset": 163
                    },
                    "end": {
                      "line": 7,
                      "column": 106,
                      "offset": 173
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")\nseparated by a space.",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 106,
                      "offset": 173
                    },
                    "end": {
                      "line": 8,
                      "column": 22,
                      "offset": 196
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 68
                },
                "end": {
                  "line": 8,
                  "column": 22,
                  "offset": 196
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If the CSS selector starts with ",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 1,
                      "offset": 198
                    },
                    "end": {
                      "line": 10,
                      "column": 33,
                      "offset": 230
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "@",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 33,
                      "offset": 230
                    },
                    "end": {
                      "line": 10,
                      "column": 36,
                      "offset": 233
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " the listener will be attached the the\ncorresponding reference element in the instance (",
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 36,
                      "offset": 233
                    },
                    "end": {
                      "line": 11,
                      "column": 50,
                      "offset": 321
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "this.$els.<element>",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 50,
                      "offset": 321
                    },
                    "end": {
                      "line": 11,
                      "column": 71,
                      "offset": 342
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "), if any.",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 71,
                      "offset": 342
                    },
                    "end": {
                      "line": 11,
                      "column": 81,
                      "offset": 352
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 198
                },
                "end": {
                  "line": 11,
                  "column": 81,
                  "offset": 352
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 11,
              "column": 81,
              "offset": 352
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "Event and target element definition. Format `eventName [target]`",
            "lineNumber": 13,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "def"
          },
          {
            "title": "param",
            "description": "Event handler",
            "lineNumber": 14,
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "handler"
          },
          {
            "title": "example",
            "description": "// attach a click handler to a child element\ninstance.setListener('click .button', () => ...)\n\n// attach a click handler to this.$els.btn\ninstance.setListener('click @btn', () => ...)\n\n// attach a click handler to this.$el\ninstance.setListener('click', () => ...)",
            "lineNumber": 15
          }
        ],
        "loc": {
          "start": {
            "line": 361,
            "column": 4
          },
          "end": {
            "line": 386,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 408,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000387"
        },
        "augments": [],
        "errors": [],
        "examples": [
          {
            "description": "// attach a click handler to a child element\ninstance.setListener('click .button', () => ...)\n\n// attach a click handler to this.$els.btn\ninstance.setListener('click @btn', () => ...)\n\n// attach a click handler to this.$el\ninstance.setListener('click', () => ...)"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "def",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Event and target element definition. Format ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 45,
                          "offset": 44
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "eventName [target]",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 45,
                          "offset": 44
                        },
                        "end": {
                          "line": 1,
                          "column": 65,
                          "offset": 64
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "handler",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Event handler",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "function"
            }
          }
        ],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "setListener",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "setListener",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#setListener"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "removeListeners()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 27
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Removes all DOM event listeners attached with ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 29
                    },
                    "end": {
                      "line": 5,
                      "column": 47,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": ".setListener",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 47,
                      "offset": 75
                    },
                    "end": {
                      "line": 5,
                      "column": 61,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 61,
                      "offset": 89
                    },
                    "end": {
                      "line": 5,
                      "column": 62,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 29
                },
                "end": {
                  "line": 5,
                  "column": 62,
                  "offset": 90
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 62,
              "offset": 90
            }
          }
        },
        "tags": [],
        "loc": {
          "start": {
            "line": 409,
            "column": 4
          },
          "end": {
            "line": 416,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 417,
              "column": 4
            },
            "end": {
              "line": 422,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000417"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "removeListeners",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "removeListeners",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#removeListeners"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "setRef(config, [props])",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 33
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Attaches a reference to a child component.",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 35
                    },
                    "end": {
                      "line": 5,
                      "column": 43,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 35
                },
                "end": {
                  "line": 5,
                  "column": 43,
                  "offset": 77
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If a reference ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 79
                    },
                    "end": {
                      "line": 7,
                      "column": 16,
                      "offset": 94
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "id",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 16,
                      "offset": 94
                    },
                    "end": {
                      "line": 7,
                      "column": 20,
                      "offset": 98
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is already attached, the previous one is destroyed and replaced with the new one",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 20,
                      "offset": 98
                    },
                    "end": {
                      "line": 7,
                      "column": 101,
                      "offset": 179
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 79
                },
                "end": {
                  "line": 7,
                  "column": 101,
                  "offset": 179
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 101,
              "offset": 179
            }
          }
        },
        "tags": [
          {
            "title": "param",
            "description": "A child component configuration object",
            "lineNumber": 9,
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "config"
          },
          {
            "title": "param",
            "description": "Reference id. Will be used to set a reference to the child component onto `this.$refs`",
            "lineNumber": 10,
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "config.id"
          },
          {
            "title": "param",
            "description": "Component constructor or component instance",
            "lineNumber": 11,
            "type": {
              "type": "NameExpression",
              "name": "component"
            },
            "name": "config.component"
          },
          {
            "title": "param",
            "description": "Child component root element. Ignored if `config.component` is a component instance",
            "lineNumber": 12,
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "string"
                },
                {
                  "type": "NameExpression",
                  "name": "HTMLElement"
                }
              ]
            },
            "name": "config.el"
          },
          {
            "title": "param",
            "description": "Child component event listeners. Format `{ 'eventname': handler }`",
            "lineNumber": 13,
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "name": "config.on"
          },
          {
            "title": "param",
            "description": "* Any other property listed here will be passed to the constructor as option",
            "lineNumber": 14,
            "type": {
              "type": "AllLiteral"
            },
            "name": "config.null"
          },
          {
            "title": "param",
            "description": "Child component initial state.",
            "lineNumber": 15,
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "object"
              }
            },
            "name": "props"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 16,
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          },
          {
            "title": "example",
            "description": "const parent = new Component('#root');\n\nclass ChildComponent extends Component {}\n\n// as constructor\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n});\n\n// as instance\nparent.setRef({\n  id: 'child',\n  component: new ChildComponent({ ... }).mount('#child', null) // <-- prevent component init\n});\n\n// sync parent - child state\n// updates child `parentCount` state whenever `parent.state.count` changes\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n}, {\n  parentCount: (parentState) => parentState.count\n});",
            "lineNumber": 17
          }
        ],
        "loc": {
          "start": {
            "line": 423,
            "column": 4
          },
          "end": {
            "line": 469,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 470,
              "column": 4
            },
            "end": {
              "line": 549,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000470"
        },
        "augments": [],
        "errors": [
          {
            "message": "An explicit parameter named config was specified but didn't match inferred information refCfg, props",
            "commentLineNumber": 9
          }
        ],
        "examples": [
          {
            "description": "const parent = new Component('#root');\n\nclass ChildComponent extends Component {}\n\n// as constructor\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n});\n\n// as instance\nparent.setRef({\n  id: 'child',\n  component: new ChildComponent({ ... }).mount('#child', null) // <-- prevent component init\n});\n\n// sync parent - child state\n// updates child `parentCount` state whenever `parent.state.count` changes\nparent.setRef({\n  id: 'child',\n  component: ChildComponent,\n  el: '#child',\n  // other options here...\n}, {\n  parentCount: (parentState) => parentState.count\n});"
          }
        ],
        "params": [
          {
            "title": "param",
            "name": "refCfg",
            "lineNumber": 470
          },
          {
            "title": "param",
            "name": "props",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Child component initial state.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 31,
                          "offset": 30
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          },
          {
            "title": "param",
            "name": "config",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "A child component configuration object",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 39,
                          "offset": 38
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "properties": [
              {
                "title": "param",
                "name": "config.id",
                "lineNumber": 10,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Reference id. Will be used to set a reference to the child component onto ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 75,
                              "offset": 74
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "this.$refs",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 75,
                              "offset": 74
                            },
                            "end": {
                              "line": 1,
                              "column": 87,
                              "offset": 86
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 87,
                          "offset": 86
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 87,
                      "offset": 86
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "title": "param",
                "name": "config.component",
                "lineNumber": 11,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Component constructor or component instance",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 44,
                              "offset": 43
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 44,
                          "offset": 43
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "component"
                }
              },
              {
                "title": "param",
                "name": "config.el",
                "lineNumber": 12,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Child component root element. Ignored if ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 42,
                              "offset": 41
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "config.component",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 42,
                              "offset": 41
                            },
                            "end": {
                              "line": 1,
                              "column": 60,
                              "offset": 59
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "text",
                          "value": " is a component instance",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 60,
                              "offset": 59
                            },
                            "end": {
                              "line": 1,
                              "column": 84,
                              "offset": 83
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 84,
                          "offset": 83
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 84,
                      "offset": 83
                    }
                  }
                },
                "type": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    },
                    {
                      "type": "NameExpression",
                      "name": "HTMLElement"
                    }
                  ]
                }
              },
              {
                "title": "param",
                "name": "config.on",
                "lineNumber": 13,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Child component event listeners. Format ",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 41,
                              "offset": 40
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "inlineCode",
                          "value": "{ 'eventname': handler }",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 41,
                              "offset": 40
                            },
                            "end": {
                              "line": 1,
                              "column": 67,
                              "offset": 66
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 67,
                          "offset": 66
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 67,
                      "offset": 66
                    }
                  }
                },
                "type": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              {
                "title": "param",
                "name": "config.null",
                "lineNumber": 14,
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "list",
                      "ordered": false,
                      "start": null,
                      "loose": false,
                      "children": [
                        {
                          "type": "listItem",
                          "loose": false,
                          "checked": null,
                          "children": [
                            {
                              "type": "paragraph",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Any other property listed here will be passed to the constructor as option",
                                  "position": {
                                    "start": {
                                      "line": 1,
                                      "column": 3,
                                      "offset": 2
                                    },
                                    "end": {
                                      "line": 1,
                                      "column": 77,
                                      "offset": 76
                                    },
                                    "indent": []
                                  }
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 3,
                                  "offset": 2
                                },
                                "end": {
                                  "line": 1,
                                  "column": 77,
                                  "offset": 76
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 77,
                              "offset": 76
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 77,
                          "offset": 76
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 77,
                      "offset": 76
                    }
                  }
                },
                "type": {
                  "type": "AllLiteral"
                }
              }
            ]
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "setRef",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "setRef",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#setRef"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Calls ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": ".destroy()",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " on every child references and detaches them from the parent component.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "end": {
                      "line": 1,
                      "column": 90,
                      "offset": 89
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 90,
                  "offset": 89
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 90,
              "offset": 89
            }
          }
        },
        "tags": [
          {
            "title": "returns",
            "description": null,
            "lineNumber": 3,
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 550,
            "column": 4
          },
          "end": {
            "line": 554,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 555,
              "column": 4
            },
            "end": {
              "line": 567,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000555"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "closeRefs",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "closeRefs",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#closeRefs"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "destroy()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 19
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Detaches DOM events, instance's events and destroys all references as well",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 21
                    },
                    "end": {
                      "line": 5,
                      "column": 75,
                      "offset": 95
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 21
                },
                "end": {
                  "line": 5,
                  "column": 75,
                  "offset": 95
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle stage: ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 97
                    },
                    "end": {
                      "line": 7,
                      "column": 18,
                      "offset": 114
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "destoy",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 18,
                      "offset": 114
                    },
                    "end": {
                      "line": 7,
                      "column": 26,
                      "offset": 122
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 97
                },
                "end": {
                  "line": 7,
                  "column": 26,
                  "offset": 122
                },
                "indent": []
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lifecycle hooks:",
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 1,
                      "offset": 124
                    },
                    "end": {
                      "line": 9,
                      "column": 17,
                      "offset": 140
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 124
                },
                "end": {
                  "line": 9,
                  "column": 17,
                  "offset": 140
                },
                "indent": []
              }
            },
            {
              "type": "list",
              "ordered": false,
              "start": null,
              "loose": false,
              "children": [
                {
                  "type": "listItem",
                  "loose": false,
                  "checked": null,
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "beforeDestroy",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 3,
                              "offset": 144
                            },
                            "end": {
                              "line": 11,
                              "column": 18,
                              "offset": 159
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 144
                        },
                        "end": {
                          "line": 11,
                          "column": 18,
                          "offset": 159
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 1,
                      "offset": 142
                    },
                    "end": {
                      "line": 11,
                      "column": 18,
                      "offset": 159
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 142
                },
                "end": {
                  "line": 11,
                  "column": 18,
                  "offset": 159
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 11,
              "column": 18,
              "offset": 159
            }
          }
        },
        "tags": [
          {
            "title": "returns",
            "description": null,
            "lineNumber": 13,
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 568,
            "column": 4
          },
          "end": {
            "line": 582,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 583,
              "column": 4
            },
            "end": {
              "line": 599,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000583"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "Promise"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "name": "destroy",
        "kind": "function",
        "memberof": "Component",
        "scope": "instance",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "destroy",
            "kind": "function",
            "scope": "instance"
          }
        ],
        "namespace": "Component#destroy"
      }
    ],
    "events": [],
    "static": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "Component.isComponent(obj)",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 36
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks whether the passed-in value is a Component constructor",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 38
                    },
                    "end": {
                      "line": 5,
                      "column": 62,
                      "offset": 99
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 38
                },
                "end": {
                  "line": 5,
                  "column": 62,
                  "offset": 99
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 62,
              "offset": 99
            }
          }
        },
        "tags": [
          {
            "title": "static",
            "description": null,
            "lineNumber": 7
          },
          {
            "title": "param",
            "description": null,
            "lineNumber": 8,
            "type": {
              "type": "AllLiteral"
            },
            "name": "value"
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 9,
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 80,
            "column": 4
          },
          "end": {
            "line": 90,
            "column": 7
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000091"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [
          {
            "title": "param",
            "name": "value",
            "lineNumber": 8,
            "type": {
              "type": "AllLiteral"
            }
          }
        ],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "scope": "static",
        "name": "<static> isComponent",
        "kind": "function",
        "memberof": "Component",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "isComponent",
            "kind": "function",
            "scope": "static"
          }
        ],
        "namespace": "Component.isComponent"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "Component.UID_DATA_ATTR",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 33
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Component root element attribute marker",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 34
                    },
                    "end": {
                      "line": 4,
                      "column": 40,
                      "offset": 73
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 34
                },
                "end": {
                  "line": 4,
                  "column": 40,
                  "offset": 73
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 40,
              "offset": 73
            }
          }
        },
        "tags": [
          {
            "title": "static",
            "description": null,
            "lineNumber": 6
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 601,
            "column": 0
          },
          "end": {
            "line": 609,
            "column": 3
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 610,
              "column": 0
            },
            "end": {
              "line": 610,
              "column": 37
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000610"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "scope": "static",
        "name": "<static> UID_DATA_ATTR",
        "memberof": "Component",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "UID_DATA_ATTR",
            "scope": "static"
          }
        ],
        "namespace": "Component.UID_DATA_ATTR"
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "code",
              "lang": "js",
              "value": "Component.defaultOptions()",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 4,
                  "offset": 36
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns an object with default options",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 1,
                      "offset": 37
                    },
                    "end": {
                      "line": 4,
                      "column": 39,
                      "offset": 75
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 37
                },
                "end": {
                  "line": 4,
                  "column": 39,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 39,
              "offset": 75
            }
          }
        },
        "tags": [
          {
            "title": "static",
            "description": null,
            "lineNumber": 6
          },
          {
            "title": "returns",
            "description": null,
            "lineNumber": 7,
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "loc": {
          "start": {
            "line": 611,
            "column": 0
          },
          "end": {
            "line": 619,
            "column": 3
          }
        },
        "context": {
          "loc": {
            "start": {
              "line": 620,
              "column": 0
            },
            "end": {
              "line": 620,
              "column": 38
            }
          },
          "file": "/Users/marco/works/yuzu2/packages/core/tmp/component.js",
          "sortKey": "undefined 00000620"
        },
        "augments": [],
        "errors": [],
        "examples": [],
        "params": [],
        "properties": [],
        "returns": [
          {
            "description": {
              "type": "root",
              "children": [],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                }
              }
            },
            "title": "returns",
            "type": {
              "type": "NameExpression",
              "name": "object"
            }
          }
        ],
        "sees": [],
        "throws": [],
        "todos": [],
        "scope": "static",
        "name": "<static> defaultOptions",
        "kind": "function",
        "memberof": "Component",
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": []
        },
        "path": [
          {
            "name": "Component",
            "kind": "class"
          },
          {
            "name": "defaultOptions",
            "kind": "function",
            "scope": "static"
          }
        ],
        "namespace": "Component.defaultOptions"
      }
    ]
  },
  "path": [
    {
      "name": "Component",
      "kind": "class"
    }
  ],
  "namespace": "Component"
}